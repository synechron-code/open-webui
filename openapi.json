{
	"openapi": "3.1.0",
	"info": {
		"title": "FastAPI",
		"version": "0.1.0"
	},
	"paths": {
		"/ollama/": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Status",
				"operationId": "get_status_ollama__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			},
			"head": {
				"tags": [
					"ollama"
				],
				"summary": "Get Status",
				"operationId": "get_status_ollama__head",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/ollama/verify": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Verify Connection",
				"operationId": "verify_connection_ollama_verify_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/open_webui__routers__ollama__ConnectionVerificationForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/ollama/config": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Config",
				"operationId": "get_config_ollama_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/ollama/config/update": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Update Config",
				"operationId": "update_config_ollama_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/open_webui__routers__ollama__OllamaConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/ollama/api/tags/{url_idx}": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Ollama Tags",
				"operationId": "get_ollama_tags_ollama_api_tags__url_idx__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/tags": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Ollama Tags",
				"operationId": "get_ollama_tags_ollama_api_tags_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/version/{url_idx}": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Ollama Versions",
				"operationId": "get_ollama_versions_ollama_api_version__url_idx__get",
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/version": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Ollama Versions",
				"operationId": "get_ollama_versions_ollama_api_version_get",
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/ps": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Ollama Loaded Models",
				"description": "List models that are currently loaded into Ollama memory, and which node they are loaded on.",
				"operationId": "get_ollama_loaded_models_ollama_api_ps_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/ollama/api/pull/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Pull Model",
				"operationId": "pull_model_ollama_api_pull__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelNameForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/pull": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Pull Model",
				"operationId": "pull_model_ollama_api_pull_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0,
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelNameForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/push/{url_idx}": {
			"delete": {
				"tags": [
					"ollama"
				],
				"summary": "Push Model",
				"operationId": "push_model_ollama_api_push__url_idx__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PushModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/push": {
			"delete": {
				"tags": [
					"ollama"
				],
				"summary": "Push Model",
				"operationId": "push_model_ollama_api_push_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PushModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/create/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Create Model",
				"operationId": "create_model_ollama_api_create__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/create": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Create Model",
				"operationId": "create_model_ollama_api_create_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0,
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/copy/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Copy Model",
				"operationId": "copy_model_ollama_api_copy__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CopyModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/copy": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Copy Model",
				"operationId": "copy_model_ollama_api_copy_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CopyModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/delete/{url_idx}": {
			"delete": {
				"tags": [
					"ollama"
				],
				"summary": "Delete Model",
				"operationId": "delete_model_ollama_api_delete__url_idx__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelNameForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/delete": {
			"delete": {
				"tags": [
					"ollama"
				],
				"summary": "Delete Model",
				"operationId": "delete_model_ollama_api_delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelNameForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/show": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Show Model Info",
				"operationId": "show_model_info_ollama_api_show_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelNameForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/ollama/api/embed/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Embed",
				"operationId": "embed_ollama_api_embed__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateEmbedForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/embed": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Embed",
				"operationId": "embed_ollama_api_embed_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateEmbedForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/embeddings/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Embeddings",
				"operationId": "embeddings_ollama_api_embeddings__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateEmbeddingsForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/embeddings": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Embeddings",
				"operationId": "embeddings_ollama_api_embeddings_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateEmbeddingsForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/generate/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Completion",
				"operationId": "generate_completion_ollama_api_generate__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateCompletionForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/generate": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Completion",
				"operationId": "generate_completion_ollama_api_generate_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateCompletionForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/chat/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Chat Completion",
				"operationId": "generate_chat_completion_ollama_api_chat__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					},
					{
						"name": "bypass_filter",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "boolean"
								},
								{
									"type": "null"
								}
							],
							"default": false,
							"title": "Bypass Filter"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/api/chat": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Chat Completion",
				"operationId": "generate_chat_completion_ollama_api_chat_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					},
					{
						"name": "bypass_filter",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "boolean"
								},
								{
									"type": "null"
								}
							],
							"default": false,
							"title": "Bypass Filter"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/v1/completions/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Openai Completion",
				"operationId": "generate_openai_completion_ollama_v1_completions__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/v1/completions": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Openai Completion",
				"operationId": "generate_openai_completion_ollama_v1_completions_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/v1/chat/completions/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Openai Chat Completion",
				"operationId": "generate_openai_chat_completion_ollama_v1_chat_completions__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/v1/chat/completions": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Generate Openai Chat Completion",
				"operationId": "generate_openai_chat_completion_ollama_v1_chat_completions_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/v1/models/{url_idx}": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Openai Models",
				"operationId": "get_openai_models_ollama_v1_models__url_idx__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/v1/models": {
			"get": {
				"tags": [
					"ollama"
				],
				"summary": "Get Openai Models",
				"operationId": "get_openai_models_ollama_v1_models_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/models/download/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Download Model",
				"operationId": "download_model_ollama_models_download__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UrlForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/models/download": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Download Model",
				"operationId": "download_model_ollama_models_download_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UrlForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/models/upload/{url_idx}": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Upload Model",
				"operationId": "upload_model_ollama_models_upload__url_idx__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_model_ollama_models_upload__url_idx__post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/ollama/models/upload": {
			"post": {
				"tags": [
					"ollama"
				],
				"summary": "Upload Model",
				"operationId": "upload_model_ollama_models_upload_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_model_ollama_models_upload_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/openai/config": {
			"get": {
				"tags": [
					"openai"
				],
				"summary": "Get Config",
				"operationId": "get_config_openai_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/openai/config/update": {
			"post": {
				"tags": [
					"openai"
				],
				"summary": "Update Config",
				"operationId": "update_config_openai_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/open_webui__routers__openai__OpenAIConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/openai/audio/speech": {
			"post": {
				"tags": [
					"openai"
				],
				"summary": "Speech",
				"operationId": "speech_openai_audio_speech_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/openai/models/{url_idx}": {
			"get": {
				"tags": [
					"openai"
				],
				"summary": "Get Models",
				"operationId": "get_models_openai_models__url_idx__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/openai/models": {
			"get": {
				"tags": [
					"openai"
				],
				"summary": "Get Models",
				"operationId": "get_models_openai_models_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "url_idx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Url Idx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/openai/verify": {
			"post": {
				"tags": [
					"openai"
				],
				"summary": "Verify Connection",
				"operationId": "verify_connection_openai_verify_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/open_webui__routers__openai__ConnectionVerificationForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/openai/chat/completions": {
			"post": {
				"tags": [
					"openai"
				],
				"summary": "Generate Chat Completion",
				"operationId": "generate_chat_completion_openai_chat_completions_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "bypass_filter",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "boolean"
								},
								{
									"type": "null"
								}
							],
							"default": false,
							"title": "Bypass Filter"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/openai/{path}": {
			"get": {
				"tags": [
					"openai"
				],
				"summary": "Proxy",
				"description": "Deprecated: proxy all requests to OpenAI API",
				"operationId": "proxy_openai__path__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Path"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"openai"
				],
				"summary": "Proxy",
				"description": "Deprecated: proxy all requests to OpenAI API",
				"operationId": "proxy_openai__path__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Path"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"openai"
				],
				"summary": "Proxy",
				"description": "Deprecated: proxy all requests to OpenAI API",
				"operationId": "proxy_openai__path__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Path"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"openai"
				],
				"summary": "Proxy",
				"description": "Deprecated: proxy all requests to OpenAI API",
				"operationId": "proxy_openai__path__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Path"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/pipelines/list": {
			"get": {
				"tags": [
					"pipelines"
				],
				"summary": "Get Pipelines List",
				"operationId": "get_pipelines_list_api_v1_pipelines_list_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/pipelines/upload": {
			"post": {
				"tags": [
					"pipelines"
				],
				"summary": "Upload Pipeline",
				"operationId": "upload_pipeline_api_v1_pipelines_upload_post",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_pipeline_api_v1_pipelines_upload_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/pipelines/add": {
			"post": {
				"tags": [
					"pipelines"
				],
				"summary": "Add Pipeline",
				"operationId": "add_pipeline_api_v1_pipelines_add_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddPipelineForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/pipelines/delete": {
			"delete": {
				"tags": [
					"pipelines"
				],
				"summary": "Delete Pipeline",
				"operationId": "delete_pipeline_api_v1_pipelines_delete_delete",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeletePipelineForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/pipelines/": {
			"get": {
				"tags": [
					"pipelines"
				],
				"summary": "Get Pipelines",
				"operationId": "get_pipelines_api_v1_pipelines__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "urlIdx",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Urlidx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/pipelines/{pipeline_id}/valves": {
			"get": {
				"tags": [
					"pipelines"
				],
				"summary": "Get Pipeline Valves",
				"operationId": "get_pipeline_valves_api_v1_pipelines__pipeline_id__valves_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "pipeline_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Pipeline Id"
						}
					},
					{
						"name": "urlIdx",
						"in": "query",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Urlidx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/pipelines/{pipeline_id}/valves/spec": {
			"get": {
				"tags": [
					"pipelines"
				],
				"summary": "Get Pipeline Valves Spec",
				"operationId": "get_pipeline_valves_spec_api_v1_pipelines__pipeline_id__valves_spec_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "pipeline_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Pipeline Id"
						}
					},
					{
						"name": "urlIdx",
						"in": "query",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Urlidx"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/pipelines/{pipeline_id}/valves/update": {
			"post": {
				"tags": [
					"pipelines"
				],
				"summary": "Update Pipeline Valves",
				"operationId": "update_pipeline_valves_api_v1_pipelines__pipeline_id__valves_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "pipeline_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Pipeline Id"
						}
					},
					{
						"name": "urlIdx",
						"in": "query",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Urlidx"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tasks/config": {
			"get": {
				"tags": [
					"tasks"
				],
				"summary": "Get Task Config",
				"operationId": "get_task_config_api_v1_tasks_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/config/update": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Update Task Config",
				"operationId": "update_task_config_api_v1_tasks_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/title/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Title",
				"operationId": "generate_title_api_v1_tasks_title_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/tags/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Chat Tags",
				"operationId": "generate_chat_tags_api_v1_tasks_tags_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/image_prompt/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Image Prompt",
				"operationId": "generate_image_prompt_api_v1_tasks_image_prompt_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/queries/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Queries",
				"operationId": "generate_queries_api_v1_tasks_queries_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/auto/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Autocompletion",
				"operationId": "generate_autocompletion_api_v1_tasks_auto_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/emoji/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Emoji",
				"operationId": "generate_emoji_api_v1_tasks_emoji_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tasks/moa/completions": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Generate Moa Response",
				"operationId": "generate_moa_response_api_v1_tasks_moa_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/config": {
			"get": {
				"tags": [
					"images"
				],
				"summary": "Get Config",
				"operationId": "get_config_api_v1_images_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/config/update": {
			"post": {
				"tags": [
					"images"
				],
				"summary": "Update Config",
				"operationId": "update_config_api_v1_images_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/config/url/verify": {
			"get": {
				"tags": [
					"images"
				],
				"summary": "Verify Url",
				"operationId": "verify_url_api_v1_images_config_url_verify_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/image/config": {
			"get": {
				"tags": [
					"images"
				],
				"summary": "Get Image Config",
				"operationId": "get_image_config_api_v1_images_image_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/image/config/update": {
			"post": {
				"tags": [
					"images"
				],
				"summary": "Update Image Config",
				"operationId": "update_image_config_api_v1_images_image_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ImageConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/models": {
			"get": {
				"tags": [
					"images"
				],
				"summary": "Get Models",
				"operationId": "get_models_api_v1_images_models_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/images/generations": {
			"post": {
				"tags": [
					"images"
				],
				"summary": "Image Generations",
				"operationId": "image_generations_api_v1_images_generations_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateImageForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/audio/config": {
			"get": {
				"tags": [
					"audio"
				],
				"summary": "Get Audio Config",
				"operationId": "get_audio_config_api_v1_audio_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/audio/config/update": {
			"post": {
				"tags": [
					"audio"
				],
				"summary": "Update Audio Config",
				"operationId": "update_audio_config_api_v1_audio_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AudioConfigUpdateForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/audio/speech": {
			"post": {
				"tags": [
					"audio"
				],
				"summary": "Speech",
				"operationId": "speech_api_v1_audio_speech_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/audio/transcriptions": {
			"post": {
				"tags": [
					"audio"
				],
				"summary": "Transcription",
				"operationId": "transcription_api_v1_audio_transcriptions_post",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_transcription_api_v1_audio_transcriptions_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/audio/models": {
			"get": {
				"tags": [
					"audio"
				],
				"summary": "Get Models",
				"operationId": "get_models_api_v1_audio_models_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/audio/voices": {
			"get": {
				"tags": [
					"audio"
				],
				"summary": "Get Voices",
				"operationId": "get_voices_api_v1_audio_voices_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Status",
				"operationId": "get_status_api_v1_retrieval__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/v1/retrieval/embedding": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Embedding Config",
				"operationId": "get_embedding_config_api_v1_retrieval_embedding_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/reranking": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Reraanking Config",
				"operationId": "get_reraanking_config_api_v1_retrieval_reranking_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/embedding/update": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Update Embedding Config",
				"operationId": "update_embedding_config_api_v1_retrieval_embedding_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EmbeddingModelUpdateForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/reranking/update": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Update Reranking Config",
				"operationId": "update_reranking_config_api_v1_retrieval_reranking_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RerankingModelUpdateForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/config": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Rag Config",
				"operationId": "get_rag_config_api_v1_retrieval_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/config/update": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Update Rag Config",
				"operationId": "update_rag_config_api_v1_retrieval_config_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ConfigUpdateForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/template": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Rag Template",
				"operationId": "get_rag_template_api_v1_retrieval_template_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/query/settings": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Query Settings",
				"operationId": "get_query_settings_api_v1_retrieval_query_settings_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/query/settings/update": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Update Query Settings",
				"operationId": "update_query_settings_api_v1_retrieval_query_settings_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QuerySettingsForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/process/file": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Process File",
				"operationId": "process_file_api_v1_retrieval_process_file_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProcessFileForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/process/text": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Process Text",
				"operationId": "process_text_api_v1_retrieval_process_text_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProcessTextForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/process/youtube": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Process Youtube Video",
				"operationId": "process_youtube_video_api_v1_retrieval_process_youtube_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProcessUrlForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/process/web": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Process Web",
				"operationId": "process_web_api_v1_retrieval_process_web_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProcessUrlForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/process/web/search": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Process Web Search",
				"operationId": "process_web_search_api_v1_retrieval_process_web_search_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SearchForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/query/doc": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Query Doc Handler",
				"operationId": "query_doc_handler_api_v1_retrieval_query_doc_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QueryDocForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/query/collection": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Query Collection Handler",
				"operationId": "query_collection_handler_api_v1_retrieval_query_collection_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QueryCollectionsForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/delete": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Delete Entries From Collection",
				"operationId": "delete_entries_from_collection_api_v1_retrieval_delete_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/reset/db": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Reset Vector Db",
				"operationId": "reset_vector_db_api_v1_retrieval_reset_db_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/reset/uploads": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Reset Upload Dir",
				"operationId": "reset_upload_dir_api_v1_retrieval_reset_uploads_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Reset Upload Dir Api V1 Retrieval Reset Uploads Post"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/retrieval/ef/{text}": {
			"get": {
				"tags": [
					"retrieval"
				],
				"summary": "Get Embeddings",
				"operationId": "get_embeddings_api_v1_retrieval_ef__text__get",
				"parameters": [
					{
						"name": "text",
						"in": "path",
						"required": true,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Text"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/retrieval/process/files/batch": {
			"post": {
				"tags": [
					"retrieval"
				],
				"summary": "Process Files Batch",
				"description": "Process a batch of files and save them to the vector database.",
				"operationId": "process_files_batch_api_v1_retrieval_process_files_batch_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BatchProcessFilesForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BatchProcessFilesResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/import": {
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Import Config",
				"operationId": "import_config_api_v1_configs_import_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ImportConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"title": "Response Import Config Api V1 Configs Import Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/export": {
			"get": {
				"tags": [
					"configs"
				],
				"summary": "Export Config",
				"operationId": "export_config_api_v1_configs_export_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"title": "Response Export Config Api V1 Configs Export Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/direct_connections": {
			"get": {
				"tags": [
					"configs"
				],
				"summary": "Get Direct Connections Config",
				"operationId": "get_direct_connections_config_api_v1_configs_direct_connections_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DirectConnectionsConfigForm"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Set Direct Connections Config",
				"operationId": "set_direct_connections_config_api_v1_configs_direct_connections_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DirectConnectionsConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DirectConnectionsConfigForm"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/code_interpreter": {
			"get": {
				"tags": [
					"configs"
				],
				"summary": "Get Code Interpreter Config",
				"operationId": "get_code_interpreter_config_api_v1_configs_code_interpreter_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CodeInterpreterConfigForm"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Set Code Interpreter Config",
				"operationId": "set_code_interpreter_config_api_v1_configs_code_interpreter_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CodeInterpreterConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CodeInterpreterConfigForm"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/models": {
			"get": {
				"tags": [
					"configs"
				],
				"summary": "Get Models Config",
				"operationId": "get_models_config_api_v1_configs_models_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ModelsConfigForm"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Set Models Config",
				"operationId": "set_models_config_api_v1_configs_models_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelsConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ModelsConfigForm"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/suggestions": {
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Set Default Suggestions",
				"operationId": "set_default_suggestions_api_v1_configs_suggestions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetDefaultSuggestionsForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PromptSuggestion"
									},
									"type": "array",
									"title": "Response Set Default Suggestions Api V1 Configs Suggestions Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/background": {
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Set Default Background Image",
				"operationId": "set_default_background_image_api_v1_configs_background_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetDefaultBackgroundForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"title": "Response Set Default Background Image Api V1 Configs Background Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/configs/banners": {
			"get": {
				"tags": [
					"configs"
				],
				"summary": "Get Banners",
				"operationId": "get_banners_api_v1_configs_banners_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/BannerModel"
									},
									"type": "array",
									"title": "Response Get Banners Api V1 Configs Banners Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"configs"
				],
				"summary": "Set Banners",
				"operationId": "set_banners_api_v1_configs_banners_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetBannersForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/BannerModel"
									},
									"type": "array",
									"title": "Response Set Banners Api V1 Configs Banners Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Get Session User",
				"operationId": "get_session_user_api_v1_auths__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionUserResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/update/profile": {
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Update Profile",
				"operationId": "update_profile_api_v1_auths_update_profile_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProfileForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/open_webui__models__auths__UserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/update/password": {
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Update Password",
				"operationId": "update_password_api_v1_auths_update_password_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdatePasswordForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Update Password Api V1 Auths Update Password Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/ldap": {
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Ldap Auth",
				"operationId": "ldap_auth_api_v1_auths_ldap_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LdapForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionUserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/auths/signin": {
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Signin",
				"operationId": "signin_api_v1_auths_signin_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SigninForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionUserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/auths/signup": {
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Signup",
				"operationId": "signup_api_v1_auths_signup_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignupForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionUserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/auths/signout": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Signout",
				"operationId": "signout_api_v1_auths_signout_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/v1/auths/add": {
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Add User",
				"operationId": "add_user_api_v1_auths_add_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddUserForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SigninResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/admin/details": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Get Admin Details",
				"operationId": "get_admin_details_api_v1_auths_admin_details_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/admin/config": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Get Admin Config",
				"operationId": "get_admin_config_api_v1_auths_admin_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Update Admin Config",
				"operationId": "update_admin_config_api_v1_auths_admin_config_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AdminConfig"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/admin/config/ldap/server": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Get Ldap Server",
				"operationId": "get_ldap_server_api_v1_auths_admin_config_ldap_server_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LdapServerConfig"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Update Ldap Server",
				"operationId": "update_ldap_server_api_v1_auths_admin_config_ldap_server_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LdapServerConfig"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/admin/config/ldap": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Get Ldap Config",
				"operationId": "get_ldap_config_api_v1_auths_admin_config_ldap_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Update Ldap Config",
				"operationId": "update_ldap_config_api_v1_auths_admin_config_ldap_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LdapConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/auths/api_key": {
			"get": {
				"tags": [
					"auths"
				],
				"summary": "Get Api Key",
				"operationId": "get_api_key_api_v1_auths_api_key_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiKey"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"auths"
				],
				"summary": "Generate Api Key",
				"operationId": "generate_api_key_api_v1_auths_api_key_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiKey"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"delete": {
				"tags": [
					"auths"
				],
				"summary": "Delete Api Key",
				"operationId": "delete_api_key_api_v1_auths_api_key_delete",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Api Key Api V1 Auths Api Key Delete"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get Users",
				"operationId": "get_users_api_v1_users__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Skip"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Limit"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UserModel"
									},
									"title": "Response Get Users Api V1 Users  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/users/groups": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get User Groups",
				"operationId": "get_user_groups_api_v1_users_groups_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/permissions": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get User Permissisions",
				"operationId": "get_user_permissisions_api_v1_users_permissions_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/default/permissions": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get User Permissions",
				"operationId": "get_user_permissions_api_v1_users_default_permissions_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserPermissions"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"users"
				],
				"summary": "Update User Permissions",
				"operationId": "update_user_permissions_api_v1_users_default_permissions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPermissions"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/update/role": {
			"post": {
				"tags": [
					"users"
				],
				"summary": "Update User Role",
				"operationId": "update_user_role_api_v1_users_update_role_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserRoleUpdateForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update User Role Api V1 Users Update Role Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/user/settings": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get User Settings By Session User",
				"operationId": "get_user_settings_by_session_user_api_v1_users_user_settings_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserSettings"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get User Settings By Session User Api V1 Users User Settings Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/user/settings/update": {
			"post": {
				"tags": [
					"users"
				],
				"summary": "Update User Settings By Session User",
				"operationId": "update_user_settings_by_session_user_api_v1_users_user_settings_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserSettings"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserSettings"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/user/info": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get User Info By Session User",
				"operationId": "get_user_info_by_session_user_api_v1_users_user_info_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get User Info By Session User Api V1 Users User Info Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/user/info/update": {
			"post": {
				"tags": [
					"users"
				],
				"summary": "Update User Info By Session User",
				"operationId": "update_user_info_by_session_user_api_v1_users_user_info_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update User Info By Session User Api V1 Users User Info Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/users/{user_id}": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get User By Id",
				"operationId": "get_user_by_id_api_v1_users__user_id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/open_webui__routers__users__UserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"users"
				],
				"summary": "Delete User By Id",
				"operationId": "delete_user_by_id_api_v1_users__user_id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete User By Id Api V1 Users  User Id  Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/users/{user_id}/update": {
			"post": {
				"tags": [
					"users"
				],
				"summary": "Update User By Id",
				"operationId": "update_user_by_id_api_v1_users__user_id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update User By Id Api V1 Users  User Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/": {
			"get": {
				"tags": [
					"channels"
				],
				"summary": "Get Channels",
				"operationId": "get_channels_api_v1_channels__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ChannelModel"
									},
									"type": "array",
									"title": "Response Get Channels Api V1 Channels  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/channels/create": {
			"post": {
				"tags": [
					"channels"
				],
				"summary": "Create New Channel",
				"operationId": "create_new_channel_api_v1_channels_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChannelForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChannelModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Channel Api V1 Channels Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/channels/{id}": {
			"get": {
				"tags": [
					"channels"
				],
				"summary": "Get Channel By Id",
				"operationId": "get_channel_by_id_api_v1_channels__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChannelModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Channel By Id Api V1 Channels  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/update": {
			"post": {
				"tags": [
					"channels"
				],
				"summary": "Update Channel By Id",
				"operationId": "update_channel_by_id_api_v1_channels__id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChannelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChannelModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Channel By Id Api V1 Channels  Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/delete": {
			"delete": {
				"tags": [
					"channels"
				],
				"summary": "Delete Channel By Id",
				"operationId": "delete_channel_by_id_api_v1_channels__id__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Channel By Id Api V1 Channels  Id  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages": {
			"get": {
				"tags": [
					"channels"
				],
				"summary": "Get Channel Messages",
				"operationId": "get_channel_messages_api_v1_channels__id__messages_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0,
							"title": "Skip"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Limit"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MessageUserResponse"
									},
									"title": "Response Get Channel Messages Api V1 Channels  Id  Messages Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/post": {
			"post": {
				"tags": [
					"channels"
				],
				"summary": "Post New Message",
				"operationId": "post_new_message_api_v1_channels__id__messages_post_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MessageForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/MessageModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Post New Message Api V1 Channels  Id  Messages Post Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/{message_id}": {
			"get": {
				"tags": [
					"channels"
				],
				"summary": "Get Channel Message",
				"operationId": "get_channel_message_api_v1_channels__id__messages__message_id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "message_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Message Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/MessageUserResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Channel Message Api V1 Channels  Id  Messages  Message Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/{message_id}/thread": {
			"get": {
				"tags": [
					"channels"
				],
				"summary": "Get Channel Thread Messages",
				"operationId": "get_channel_thread_messages_api_v1_channels__id__messages__message_id__thread_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "message_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Message Id"
						}
					},
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0,
							"title": "Skip"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Limit"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MessageUserResponse"
									},
									"title": "Response Get Channel Thread Messages Api V1 Channels  Id  Messages  Message Id  Thread Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/{message_id}/update": {
			"post": {
				"tags": [
					"channels"
				],
				"summary": "Update Message By Id",
				"operationId": "update_message_by_id_api_v1_channels__id__messages__message_id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "message_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Message Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MessageForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/MessageModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Message By Id Api V1 Channels  Id  Messages  Message Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/{message_id}/reactions/add": {
			"post": {
				"tags": [
					"channels"
				],
				"summary": "Add Reaction To Message",
				"operationId": "add_reaction_to_message_api_v1_channels__id__messages__message_id__reactions_add_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "message_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Message Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReactionForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Add Reaction To Message Api V1 Channels  Id  Messages  Message Id  Reactions Add Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/{message_id}/reactions/remove": {
			"post": {
				"tags": [
					"channels"
				],
				"summary": "Remove Reaction By Id And User Id And Name",
				"operationId": "remove_reaction_by_id_and_user_id_and_name_api_v1_channels__id__messages__message_id__reactions_remove_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "message_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Message Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReactionForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Remove Reaction By Id And User Id And Name Api V1 Channels  Id  Messages  Message Id  Reactions Remove Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/channels/{id}/messages/{message_id}/delete": {
			"delete": {
				"tags": [
					"channels"
				],
				"summary": "Delete Message By Id",
				"operationId": "delete_message_by_id_api_v1_channels__id__messages__message_id__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					},
					{
						"name": "message_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Message Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Message By Id Api V1 Channels  Id  Messages  Message Id  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/list": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Session User Chat List",
				"operationId": "get_session_user_chat_list_api_v1_chats_list_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Page"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChatTitleIdResponse"
									},
									"title": "Response Get Session User Chat List Api V1 Chats List Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Session User Chat List",
				"operationId": "get_session_user_chat_list_api_v1_chats__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Page"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChatTitleIdResponse"
									},
									"title": "Response Get Session User Chat List Api V1 Chats  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"chats"
				],
				"summary": "Delete All User Chats",
				"operationId": "delete_all_user_chats_api_v1_chats__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete All User Chats Api V1 Chats  Delete"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/list/user/{user_id}": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get User Chat List By User Id",
				"operationId": "get_user_chat_list_by_user_id_api_v1_chats_list_user__user_id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Id"
						}
					},
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0,
							"title": "Skip"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Limit"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChatTitleIdResponse"
									},
									"title": "Response Get User Chat List By User Id Api V1 Chats List User  User Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/new": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Create New Chat",
				"operationId": "create_new_chat_api_v1_chats_new_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Chat Api V1 Chats New Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/import": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Import Chat",
				"operationId": "import_chat_api_v1_chats_import_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatImportForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Import Chat Api V1 Chats Import Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/search": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Search User Chats",
				"operationId": "search_user_chats_api_v1_chats_search_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "text",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Text"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Page"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChatTitleIdResponse"
									},
									"title": "Response Search User Chats Api V1 Chats Search Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/folder/{folder_id}": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Chats By Folder Id",
				"operationId": "get_chats_by_folder_id_api_v1_chats_folder__folder_id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "folder_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Folder Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChatResponse"
									},
									"title": "Response Get Chats By Folder Id Api V1 Chats Folder  Folder Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/pinned": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get User Pinned Chats",
				"operationId": "get_user_pinned_chats_api_v1_chats_pinned_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ChatResponse"
									},
									"type": "array",
									"title": "Response Get User Pinned Chats Api V1 Chats Pinned Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/all": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get User Chats",
				"operationId": "get_user_chats_api_v1_chats_all_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ChatResponse"
									},
									"type": "array",
									"title": "Response Get User Chats Api V1 Chats All Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/all/archived": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get User Archived Chats",
				"operationId": "get_user_archived_chats_api_v1_chats_all_archived_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ChatResponse"
									},
									"type": "array",
									"title": "Response Get User Archived Chats Api V1 Chats All Archived Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/all/tags": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get All User Tags",
				"operationId": "get_all_user_tags_api_v1_chats_all_tags_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TagModel"
									},
									"type": "array",
									"title": "Response Get All User Tags Api V1 Chats All Tags Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/all/db": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get All User Chats In Db",
				"operationId": "get_all_user_chats_in_db_api_v1_chats_all_db_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ChatResponse"
									},
									"type": "array",
									"title": "Response Get All User Chats In Db Api V1 Chats All Db Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/archived": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Archived Session User Chat List",
				"operationId": "get_archived_session_user_chat_list_api_v1_chats_archived_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 0,
							"title": "Skip"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"default": 50,
							"title": "Limit"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ChatTitleIdResponse"
									},
									"title": "Response Get Archived Session User Chat List Api V1 Chats Archived Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/archive/all": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Archive All Chats",
				"operationId": "archive_all_chats_api_v1_chats_archive_all_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Archive All Chats Api V1 Chats Archive All Post"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/share/{share_id}": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Shared Chat By Id",
				"operationId": "get_shared_chat_by_id_api_v1_chats_share__share_id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "share_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Share Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Shared Chat By Id Api V1 Chats Share  Share Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/tags": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Get User Chat List By Tag Name",
				"operationId": "get_user_chat_list_by_tag_name_api_v1_chats_tags_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TagFilterForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ChatTitleIdResponse"
									},
									"type": "array",
									"title": "Response Get User Chat List By Tag Name Api V1 Chats Tags Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/chats/{id}": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Chat By Id",
				"operationId": "get_chat_by_id_api_v1_chats__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Chat By Id Api V1 Chats  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Update Chat By Id",
				"operationId": "update_chat_by_id_api_v1_chats__id__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Chat By Id Api V1 Chats  Id  Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"chats"
				],
				"summary": "Delete Chat By Id",
				"operationId": "delete_chat_by_id_api_v1_chats__id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Chat By Id Api V1 Chats  Id  Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/pinned": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Pinned Status By Id",
				"operationId": "get_pinned_status_by_id_api_v1_chats__id__pinned_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "boolean"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Pinned Status By Id Api V1 Chats  Id  Pinned Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/pin": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Pin Chat By Id",
				"operationId": "pin_chat_by_id_api_v1_chats__id__pin_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Pin Chat By Id Api V1 Chats  Id  Pin Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/clone": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Clone Chat By Id",
				"operationId": "clone_chat_by_id_api_v1_chats__id__clone_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CloneForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Clone Chat By Id Api V1 Chats  Id  Clone Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/clone/shared": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Clone Shared Chat By Id",
				"operationId": "clone_shared_chat_by_id_api_v1_chats__id__clone_shared_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Clone Shared Chat By Id Api V1 Chats  Id  Clone Shared Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/archive": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Archive Chat By Id",
				"operationId": "archive_chat_by_id_api_v1_chats__id__archive_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Archive Chat By Id Api V1 Chats  Id  Archive Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/share": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Share Chat By Id",
				"operationId": "share_chat_by_id_api_v1_chats__id__share_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Share Chat By Id Api V1 Chats  Id  Share Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"chats"
				],
				"summary": "Delete Shared Chat By Id",
				"operationId": "delete_shared_chat_by_id_api_v1_chats__id__share_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "boolean"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Delete Shared Chat By Id Api V1 Chats  Id  Share Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/folder": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Update Chat Folder Id By Id",
				"operationId": "update_chat_folder_id_by_id_api_v1_chats__id__folder_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatFolderIdForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChatResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Chat Folder Id By Id Api V1 Chats  Id  Folder Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/tags": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Chat Tags By Id",
				"operationId": "get_chat_tags_by_id_api_v1_chats__id__tags_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/TagModel"
									},
									"title": "Response Get Chat Tags By Id Api V1 Chats  Id  Tags Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"chats"
				],
				"summary": "Add Tag By Id And Tag Name",
				"operationId": "add_tag_by_id_and_tag_name_api_v1_chats__id__tags_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TagForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/TagModel"
									},
									"title": "Response Add Tag By Id And Tag Name Api V1 Chats  Id  Tags Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"chats"
				],
				"summary": "Delete Tag By Id And Tag Name",
				"operationId": "delete_tag_by_id_and_tag_name_api_v1_chats__id__tags_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TagForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/TagModel"
									},
									"title": "Response Delete Tag By Id And Tag Name Api V1 Chats  Id  Tags Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/chats/{id}/tags/all": {
			"delete": {
				"tags": [
					"chats"
				],
				"summary": "Delete All Tags By Id",
				"operationId": "delete_all_tags_by_id_api_v1_chats__id__tags_all_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "boolean"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Delete All Tags By Id Api V1 Chats  Id  Tags All Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/models/": {
			"get": {
				"tags": [
					"models"
				],
				"summary": "Get Models",
				"operationId": "get_models_api_v1_models__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ModelUserResponse"
									},
									"title": "Response Get Models Api V1 Models  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/models/base": {
			"get": {
				"tags": [
					"models"
				],
				"summary": "Get Base Models",
				"operationId": "get_base_models_api_v1_models_base_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ModelResponse"
									},
									"type": "array",
									"title": "Response Get Base Models Api V1 Models Base Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/models/create": {
			"post": {
				"tags": [
					"models"
				],
				"summary": "Create New Model",
				"operationId": "create_new_model_api_v1_models_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ModelModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Model Api V1 Models Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/models/model": {
			"get": {
				"tags": [
					"models"
				],
				"summary": "Get Model By Id",
				"operationId": "get_model_by_id_api_v1_models_model_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ModelResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Model By Id Api V1 Models Model Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/models/model/toggle": {
			"post": {
				"tags": [
					"models"
				],
				"summary": "Toggle Model By Id",
				"operationId": "toggle_model_by_id_api_v1_models_model_toggle_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ModelResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Toggle Model By Id Api V1 Models Model Toggle Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/models/model/update": {
			"post": {
				"tags": [
					"models"
				],
				"summary": "Update Model By Id",
				"operationId": "update_model_by_id_api_v1_models_model_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ModelModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Model By Id Api V1 Models Model Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/models/model/delete": {
			"delete": {
				"tags": [
					"models"
				],
				"summary": "Delete Model By Id",
				"operationId": "delete_model_by_id_api_v1_models_model_delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Model By Id Api V1 Models Model Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/models/delete/all": {
			"delete": {
				"tags": [
					"models"
				],
				"summary": "Delete All Models",
				"operationId": "delete_all_models_api_v1_models_delete_all_delete",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete All Models Api V1 Models Delete All Delete"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/knowledge/": {
			"get": {
				"tags": [
					"knowledge"
				],
				"summary": "Get Knowledge",
				"operationId": "get_knowledge_api_v1_knowledge__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/KnowledgeUserResponse"
									},
									"type": "array",
									"title": "Response Get Knowledge Api V1 Knowledge  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/knowledge/list": {
			"get": {
				"tags": [
					"knowledge"
				],
				"summary": "Get Knowledge List",
				"operationId": "get_knowledge_list_api_v1_knowledge_list_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/KnowledgeUserResponse"
									},
									"type": "array",
									"title": "Response Get Knowledge List Api V1 Knowledge List Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/knowledge/create": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Create New Knowledge",
				"operationId": "create_new_knowledge_api_v1_knowledge_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/KnowledgeForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Knowledge Api V1 Knowledge Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/knowledge/{id}": {
			"get": {
				"tags": [
					"knowledge"
				],
				"summary": "Get Knowledge By Id",
				"operationId": "get_knowledge_by_id_api_v1_knowledge__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeFilesResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Knowledge By Id Api V1 Knowledge  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/update": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Update Knowledge By Id",
				"operationId": "update_knowledge_by_id_api_v1_knowledge__id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/KnowledgeForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeFilesResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Knowledge By Id Api V1 Knowledge  Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/file/add": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Add File To Knowledge By Id",
				"operationId": "add_file_to_knowledge_by_id_api_v1_knowledge__id__file_add_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/KnowledgeFileIdForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeFilesResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Add File To Knowledge By Id Api V1 Knowledge  Id  File Add Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/file/update": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Update File From Knowledge By Id",
				"operationId": "update_file_from_knowledge_by_id_api_v1_knowledge__id__file_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/KnowledgeFileIdForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeFilesResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update File From Knowledge By Id Api V1 Knowledge  Id  File Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/file/remove": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Remove File From Knowledge By Id",
				"operationId": "remove_file_from_knowledge_by_id_api_v1_knowledge__id__file_remove_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/KnowledgeFileIdForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeFilesResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Remove File From Knowledge By Id Api V1 Knowledge  Id  File Remove Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/delete": {
			"delete": {
				"tags": [
					"knowledge"
				],
				"summary": "Delete Knowledge By Id",
				"operationId": "delete_knowledge_by_id_api_v1_knowledge__id__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Knowledge By Id Api V1 Knowledge  Id  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/reset": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Reset Knowledge By Id",
				"operationId": "reset_knowledge_by_id_api_v1_knowledge__id__reset_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Reset Knowledge By Id Api V1 Knowledge  Id  Reset Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/knowledge/{id}/files/batch/add": {
			"post": {
				"tags": [
					"knowledge"
				],
				"summary": "Add Files To Knowledge Batch",
				"description": "Add multiple files to a knowledge base",
				"operationId": "add_files_to_knowledge_batch_api_v1_knowledge__id__files_batch_add_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/KnowledgeFileIdForm"
								},
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/KnowledgeFilesResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Add Files To Knowledge Batch Api V1 Knowledge  Id  Files Batch Add Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/prompts/": {
			"get": {
				"tags": [
					"prompts"
				],
				"summary": "Get Prompts",
				"operationId": "get_prompts_api_v1_prompts__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PromptModel"
									},
									"type": "array",
									"title": "Response Get Prompts Api V1 Prompts  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/prompts/list": {
			"get": {
				"tags": [
					"prompts"
				],
				"summary": "Get Prompt List",
				"operationId": "get_prompt_list_api_v1_prompts_list_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PromptUserResponse"
									},
									"type": "array",
									"title": "Response Get Prompt List Api V1 Prompts List Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/prompts/create": {
			"post": {
				"tags": [
					"prompts"
				],
				"summary": "Create New Prompt",
				"operationId": "create_new_prompt_api_v1_prompts_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PromptModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Prompt Api V1 Prompts Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/prompts/command/{command}": {
			"get": {
				"tags": [
					"prompts"
				],
				"summary": "Get Prompt By Command",
				"operationId": "get_prompt_by_command_api_v1_prompts_command__command__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "command",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Command"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PromptModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Prompt By Command Api V1 Prompts Command  Command  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/prompts/command/{command}/update": {
			"post": {
				"tags": [
					"prompts"
				],
				"summary": "Update Prompt By Command",
				"operationId": "update_prompt_by_command_api_v1_prompts_command__command__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "command",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Command"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PromptModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Prompt By Command Api V1 Prompts Command  Command  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/prompts/command/{command}/delete": {
			"delete": {
				"tags": [
					"prompts"
				],
				"summary": "Delete Prompt By Command",
				"operationId": "delete_prompt_by_command_api_v1_prompts_command__command__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "command",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Command"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Prompt By Command Api V1 Prompts Command  Command  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tools",
				"operationId": "get_tools_api_v1_tools__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ToolUserResponse"
									},
									"type": "array",
									"title": "Response Get Tools Api V1 Tools  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tools/list": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tool List",
				"operationId": "get_tool_list_api_v1_tools_list_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ToolUserResponse"
									},
									"type": "array",
									"title": "Response Get Tool List Api V1 Tools List Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tools/export": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Export Tools",
				"operationId": "export_tools_api_v1_tools_export_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ToolModel"
									},
									"type": "array",
									"title": "Response Export Tools Api V1 Tools Export Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tools/create": {
			"post": {
				"tags": [
					"tools"
				],
				"summary": "Create New Tools",
				"operationId": "create_new_tools_api_v1_tools_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ToolForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ToolResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Tools Api V1 Tools Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/tools/id/{id}": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tools By Id",
				"operationId": "get_tools_by_id_api_v1_tools_id__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ToolModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Tools By Id Api V1 Tools Id  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/update": {
			"post": {
				"tags": [
					"tools"
				],
				"summary": "Update Tools By Id",
				"operationId": "update_tools_by_id_api_v1_tools_id__id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ToolForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ToolModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Tools By Id Api V1 Tools Id  Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/delete": {
			"delete": {
				"tags": [
					"tools"
				],
				"summary": "Delete Tools By Id",
				"operationId": "delete_tools_by_id_api_v1_tools_id__id__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Tools By Id Api V1 Tools Id  Id  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/valves": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tools Valves By Id",
				"operationId": "get_tools_valves_by_id_api_v1_tools_id__id__valves_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Tools Valves By Id Api V1 Tools Id  Id  Valves Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/valves/spec": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tools Valves Spec By Id",
				"operationId": "get_tools_valves_spec_by_id_api_v1_tools_id__id__valves_spec_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Tools Valves Spec By Id Api V1 Tools Id  Id  Valves Spec Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/valves/update": {
			"post": {
				"tags": [
					"tools"
				],
				"summary": "Update Tools Valves By Id",
				"operationId": "update_tools_valves_by_id_api_v1_tools_id__id__valves_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Tools Valves By Id Api V1 Tools Id  Id  Valves Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/valves/user": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tools User Valves By Id",
				"operationId": "get_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Tools User Valves By Id Api V1 Tools Id  Id  Valves User Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/valves/user/spec": {
			"get": {
				"tags": [
					"tools"
				],
				"summary": "Get Tools User Valves Spec By Id",
				"operationId": "get_tools_user_valves_spec_by_id_api_v1_tools_id__id__valves_user_spec_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Tools User Valves Spec By Id Api V1 Tools Id  Id  Valves User Spec Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/tools/id/{id}/valves/user/update": {
			"post": {
				"tags": [
					"tools"
				],
				"summary": "Update Tools User Valves By Id",
				"operationId": "update_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Tools User Valves By Id Api V1 Tools Id  Id  Valves User Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/memories/ef": {
			"get": {
				"tags": [
					"memories"
				],
				"summary": "Get Embeddings",
				"operationId": "get_embeddings_api_v1_memories_ef_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/v1/memories/": {
			"get": {
				"tags": [
					"memories"
				],
				"summary": "Get Memories",
				"operationId": "get_memories_api_v1_memories__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MemoryModel"
									},
									"type": "array",
									"title": "Response Get Memories Api V1 Memories  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/memories/add": {
			"post": {
				"tags": [
					"memories"
				],
				"summary": "Add Memory",
				"operationId": "add_memory_api_v1_memories_add_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddMemoryForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/MemoryModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Add Memory Api V1 Memories Add Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/memories/query": {
			"post": {
				"tags": [
					"memories"
				],
				"summary": "Query Memory",
				"operationId": "query_memory_api_v1_memories_query_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QueryMemoryForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/memories/reset": {
			"post": {
				"tags": [
					"memories"
				],
				"summary": "Reset Memory From Vector Db",
				"operationId": "reset_memory_from_vector_db_api_v1_memories_reset_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Reset Memory From Vector Db Api V1 Memories Reset Post"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/memories/delete/user": {
			"delete": {
				"tags": [
					"memories"
				],
				"summary": "Delete Memory By User Id",
				"operationId": "delete_memory_by_user_id_api_v1_memories_delete_user_delete",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Memory By User Id Api V1 Memories Delete User Delete"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/memories/{memory_id}/update": {
			"post": {
				"tags": [
					"memories"
				],
				"summary": "Update Memory By Id",
				"operationId": "update_memory_by_id_api_v1_memories__memory_id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "memory_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Memory Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MemoryUpdateModel"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/MemoryModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Memory By Id Api V1 Memories  Memory Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/memories/{memory_id}": {
			"delete": {
				"tags": [
					"memories"
				],
				"summary": "Delete Memory By Id",
				"operationId": "delete_memory_by_id_api_v1_memories__memory_id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "memory_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Memory Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Memory By Id Api V1 Memories  Memory Id  Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/folders/": {
			"get": {
				"tags": [
					"folders"
				],
				"summary": "Get Folders",
				"operationId": "get_folders_api_v1_folders__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FolderModel"
									},
									"type": "array",
									"title": "Response Get Folders Api V1 Folders  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"folders"
				],
				"summary": "Create Folder",
				"operationId": "create_folder_api_v1_folders__post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/folders/{id}": {
			"get": {
				"tags": [
					"folders"
				],
				"summary": "Get Folder By Id",
				"operationId": "get_folder_by_id_api_v1_folders__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FolderModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Folder By Id Api V1 Folders  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"folders"
				],
				"summary": "Delete Folder By Id",
				"operationId": "delete_folder_by_id_api_v1_folders__id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/folders/{id}/update": {
			"post": {
				"tags": [
					"folders"
				],
				"summary": "Update Folder Name By Id",
				"operationId": "update_folder_name_by_id_api_v1_folders__id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/folders/{id}/update/parent": {
			"post": {
				"tags": [
					"folders"
				],
				"summary": "Update Folder Parent Id By Id",
				"operationId": "update_folder_parent_id_by_id_api_v1_folders__id__update_parent_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderParentIdForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/folders/{id}/update/expanded": {
			"post": {
				"tags": [
					"folders"
				],
				"summary": "Update Folder Is Expanded By Id",
				"operationId": "update_folder_is_expanded_by_id_api_v1_folders__id__update_expanded_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderIsExpandedForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/groups/": {
			"get": {
				"tags": [
					"groups"
				],
				"summary": "Get Groups",
				"operationId": "get_groups_api_v1_groups__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GroupResponse"
									},
									"type": "array",
									"title": "Response Get Groups Api V1 Groups  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/groups/create": {
			"post": {
				"tags": [
					"groups"
				],
				"summary": "Create New Function",
				"operationId": "create_new_function_api_v1_groups_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GroupForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GroupResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Function Api V1 Groups Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/groups/id/{id}": {
			"get": {
				"tags": [
					"groups"
				],
				"summary": "Get Group By Id",
				"operationId": "get_group_by_id_api_v1_groups_id__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GroupResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Group By Id Api V1 Groups Id  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/groups/id/{id}/update": {
			"post": {
				"tags": [
					"groups"
				],
				"summary": "Update Group By Id",
				"operationId": "update_group_by_id_api_v1_groups_id__id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GroupUpdateForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GroupResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Group By Id Api V1 Groups Id  Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/groups/id/{id}/delete": {
			"delete": {
				"tags": [
					"groups"
				],
				"summary": "Delete Group By Id",
				"operationId": "delete_group_by_id_api_v1_groups_id__id__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Group By Id Api V1 Groups Id  Id  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/files/": {
			"get": {
				"tags": [
					"files"
				],
				"summary": "List Files",
				"operationId": "list_files_api_v1_files__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FileModelResponse"
									},
									"type": "array",
									"title": "Response List Files Api V1 Files  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"files"
				],
				"summary": "Upload File",
				"operationId": "upload_file_api_v1_files__post",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_file_api_v1_files__post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FileModelResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/files/all": {
			"delete": {
				"tags": [
					"files"
				],
				"summary": "Delete All Files",
				"operationId": "delete_all_files_api_v1_files_all_delete",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/files/{id}": {
			"get": {
				"tags": [
					"files"
				],
				"summary": "Get File By Id",
				"operationId": "get_file_by_id_api_v1_files__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FileModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get File By Id Api V1 Files  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"files"
				],
				"summary": "Delete File By Id",
				"operationId": "delete_file_by_id_api_v1_files__id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/files/{id}/data/content": {
			"get": {
				"tags": [
					"files"
				],
				"summary": "Get File Data Content By Id",
				"operationId": "get_file_data_content_by_id_api_v1_files__id__data_content_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/files/{id}/data/content/update": {
			"post": {
				"tags": [
					"files"
				],
				"summary": "Update File Data Content By Id",
				"operationId": "update_file_data_content_by_id_api_v1_files__id__data_content_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContentForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/files/{id}/content": {
			"get": {
				"tags": [
					"files"
				],
				"summary": "Get File Content By Id",
				"operationId": "get_file_content_by_id_api_v1_files__id__content_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/files/{id}/content/html": {
			"get": {
				"tags": [
					"files"
				],
				"summary": "Get Html File Content By Id",
				"operationId": "get_html_file_content_by_id_api_v1_files__id__content_html_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/files/{id}/content/{file_name}": {
			"get": {
				"tags": [
					"files"
				],
				"summary": "Get File Content By Id",
				"operationId": "get_file_content_by_id_api_v1_files__id__content__file_name__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Functions",
				"operationId": "get_functions_api_v1_functions__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FunctionResponse"
									},
									"type": "array",
									"title": "Response Get Functions Api V1 Functions  Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/functions/export": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Functions",
				"operationId": "get_functions_api_v1_functions_export_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FunctionModel"
									},
									"type": "array",
									"title": "Response Get Functions Api V1 Functions Export Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/functions/create": {
			"post": {
				"tags": [
					"functions"
				],
				"summary": "Create New Function",
				"operationId": "create_new_function_api_v1_functions_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FunctionForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FunctionResponse"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Create New Function Api V1 Functions Create Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/functions/id/{id}": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Function By Id",
				"operationId": "get_function_by_id_api_v1_functions_id__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FunctionModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Function By Id Api V1 Functions Id  Id  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/toggle": {
			"post": {
				"tags": [
					"functions"
				],
				"summary": "Toggle Function By Id",
				"operationId": "toggle_function_by_id_api_v1_functions_id__id__toggle_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FunctionModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Toggle Function By Id Api V1 Functions Id  Id  Toggle Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/toggle/global": {
			"post": {
				"tags": [
					"functions"
				],
				"summary": "Toggle Global By Id",
				"operationId": "toggle_global_by_id_api_v1_functions_id__id__toggle_global_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FunctionModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Toggle Global By Id Api V1 Functions Id  Id  Toggle Global Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/update": {
			"post": {
				"tags": [
					"functions"
				],
				"summary": "Update Function By Id",
				"operationId": "update_function_by_id_api_v1_functions_id__id__update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FunctionForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FunctionModel"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Function By Id Api V1 Functions Id  Id  Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/delete": {
			"delete": {
				"tags": [
					"functions"
				],
				"summary": "Delete Function By Id",
				"operationId": "delete_function_by_id_api_v1_functions_id__id__delete_delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Function By Id Api V1 Functions Id  Id  Delete Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/valves": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Function Valves By Id",
				"operationId": "get_function_valves_by_id_api_v1_functions_id__id__valves_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Function Valves By Id Api V1 Functions Id  Id  Valves Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/valves/spec": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Function Valves Spec By Id",
				"operationId": "get_function_valves_spec_by_id_api_v1_functions_id__id__valves_spec_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Function Valves Spec By Id Api V1 Functions Id  Id  Valves Spec Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/valves/update": {
			"post": {
				"tags": [
					"functions"
				],
				"summary": "Update Function Valves By Id",
				"operationId": "update_function_valves_by_id_api_v1_functions_id__id__valves_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Function Valves By Id Api V1 Functions Id  Id  Valves Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/valves/user": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Function User Valves By Id",
				"operationId": "get_function_user_valves_by_id_api_v1_functions_id__id__valves_user_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Function User Valves By Id Api V1 Functions Id  Id  Valves User Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/valves/user/spec": {
			"get": {
				"tags": [
					"functions"
				],
				"summary": "Get Function User Valves Spec By Id",
				"operationId": "get_function_user_valves_spec_by_id_api_v1_functions_id__id__valves_user_spec_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Get Function User Valves Spec By Id Api V1 Functions Id  Id  Valves User Spec Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/functions/id/{id}/valves/user/update": {
			"post": {
				"tags": [
					"functions"
				],
				"summary": "Update Function User Valves By Id",
				"operationId": "update_function_user_valves_by_id_api_v1_functions_id__id__valves_user_update_post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "object"
										},
										{
											"type": "null"
										}
									],
									"title": "Response Update Function User Valves By Id Api V1 Functions Id  Id  Valves User Update Post"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/evaluations/config": {
			"get": {
				"tags": [
					"evaluations"
				],
				"summary": "Get Config",
				"operationId": "get_config_api_v1_evaluations_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"tags": [
					"evaluations"
				],
				"summary": "Update Config",
				"operationId": "update_config_api_v1_evaluations_config_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateConfigForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/evaluations/feedbacks/all": {
			"get": {
				"tags": [
					"evaluations"
				],
				"summary": "Get All Feedbacks",
				"operationId": "get_all_feedbacks_api_v1_evaluations_feedbacks_all_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FeedbackUserResponse"
									},
									"type": "array",
									"title": "Response Get All Feedbacks Api V1 Evaluations Feedbacks All Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"delete": {
				"tags": [
					"evaluations"
				],
				"summary": "Delete All Feedbacks",
				"operationId": "delete_all_feedbacks_api_v1_evaluations_feedbacks_all_delete",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/evaluations/feedbacks/all/export": {
			"get": {
				"tags": [
					"evaluations"
				],
				"summary": "Get All Feedbacks",
				"operationId": "get_all_feedbacks_api_v1_evaluations_feedbacks_all_export_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FeedbackModel"
									},
									"type": "array",
									"title": "Response Get All Feedbacks Api V1 Evaluations Feedbacks All Export Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/evaluations/feedbacks/user": {
			"get": {
				"tags": [
					"evaluations"
				],
				"summary": "Get Feedbacks",
				"operationId": "get_feedbacks_api_v1_evaluations_feedbacks_user_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FeedbackUserResponse"
									},
									"type": "array",
									"title": "Response Get Feedbacks Api V1 Evaluations Feedbacks User Get"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/evaluations/feedbacks": {
			"delete": {
				"tags": [
					"evaluations"
				],
				"summary": "Delete Feedbacks",
				"operationId": "delete_feedbacks_api_v1_evaluations_feedbacks_delete",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean",
									"title": "Response Delete Feedbacks Api V1 Evaluations Feedbacks Delete"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/evaluations/feedback": {
			"post": {
				"tags": [
					"evaluations"
				],
				"summary": "Create Feedback",
				"operationId": "create_feedback_api_v1_evaluations_feedback_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FeedbackForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FeedbackModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/evaluations/feedback/{id}": {
			"get": {
				"tags": [
					"evaluations"
				],
				"summary": "Get Feedback By Id",
				"operationId": "get_feedback_by_id_api_v1_evaluations_feedback__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FeedbackModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"evaluations"
				],
				"summary": "Update Feedback By Id",
				"operationId": "update_feedback_by_id_api_v1_evaluations_feedback__id__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FeedbackForm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FeedbackModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"evaluations"
				],
				"summary": "Delete Feedback By Id",
				"operationId": "delete_feedback_by_id_api_v1_evaluations_feedback__id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/utils/gravatar": {
			"get": {
				"tags": [
					"utils"
				],
				"summary": "Get Gravatar",
				"operationId": "get_gravatar_api_v1_utils_gravatar_get",
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Email"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/utils/code/format": {
			"post": {
				"tags": [
					"utils"
				],
				"summary": "Format Code",
				"operationId": "format_code_api_v1_utils_code_format_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CodeFormatRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/utils/markdown": {
			"post": {
				"tags": [
					"utils"
				],
				"summary": "Get Html From Markdown",
				"operationId": "get_html_from_markdown_api_v1_utils_markdown_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MarkdownForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/utils/pdf": {
			"post": {
				"tags": [
					"utils"
				],
				"summary": "Download Chat As Pdf",
				"operationId": "download_chat_as_pdf_api_v1_utils_pdf_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatTitleMessagesForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/utils/db/download": {
			"get": {
				"tags": [
					"utils"
				],
				"summary": "Download Db",
				"operationId": "download_db_api_v1_utils_db_download_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1/utils/litellm/config": {
			"get": {
				"tags": [
					"utils"
				],
				"summary": "Download Litellm Config Yaml",
				"operationId": "download_litellm_config_yaml_api_v1_utils_litellm_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/models": {
			"get": {
				"summary": "Get Models",
				"operationId": "get_models_api_models_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/models/base": {
			"get": {
				"summary": "Get Base Models",
				"operationId": "get_base_models_api_models_base_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/chat/completions": {
			"post": {
				"summary": "Chat Completion",
				"operationId": "chat_completion_api_chat_completions_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/chat/completed": {
			"post": {
				"summary": "Chat Completed",
				"operationId": "chat_completed_api_chat_completed_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/chat/actions/{action_id}": {
			"post": {
				"summary": "Chat Action",
				"operationId": "chat_action_api_chat_actions__action_id__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "action_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Action Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "Form Data"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/tasks/stop/{task_id}": {
			"post": {
				"summary": "Stop Task Endpoint",
				"operationId": "stop_task_endpoint_api_tasks_stop__task_id__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "task_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Task Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/tasks": {
			"get": {
				"summary": "List Tasks Endpoint",
				"operationId": "list_tasks_endpoint_api_tasks_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/config": {
			"get": {
				"summary": "Get App Config",
				"operationId": "get_app_config_api_config_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/webhook": {
			"get": {
				"summary": "Get Webhook Url",
				"operationId": "get_webhook_url_api_webhook_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			},
			"post": {
				"summary": "Update Webhook Url",
				"operationId": "update_webhook_url_api_webhook_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UrlForm"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/version": {
			"get": {
				"summary": "Get App Version",
				"operationId": "get_app_version_api_version_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/api/version/updates": {
			"get": {
				"summary": "Get App Latest Release Version",
				"operationId": "get_app_latest_release_version_api_version_updates_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/changelog": {
			"get": {
				"summary": "Get App Changelog",
				"operationId": "get_app_changelog_api_changelog_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/oauth/{provider}/login": {
			"get": {
				"summary": "Oauth Login",
				"operationId": "oauth_login_oauth__provider__login_get",
				"parameters": [
					{
						"name": "provider",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Provider"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/oauth/{provider}/callback": {
			"get": {
				"summary": "Oauth Callback",
				"operationId": "oauth_callback_oauth__provider__callback_get",
				"parameters": [
					{
						"name": "provider",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Provider"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/manifest.json": {
			"get": {
				"summary": "Get Manifest Json",
				"operationId": "get_manifest_json_manifest_json_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/opensearch.xml": {
			"get": {
				"summary": "Get Opensearch Xml",
				"operationId": "get_opensearch_xml_opensearch_xml_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/health": {
			"get": {
				"summary": "Healthcheck",
				"operationId": "healthcheck_health_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/health/db": {
			"get": {
				"summary": "Healthcheck With Db",
				"operationId": "healthcheck_with_db_health_db_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"AddMemoryForm": {
				"properties": {
					"content": {
						"type": "string",
						"title": "Content"
					}
				},
				"type": "object",
				"required": [
					"content"
				],
				"title": "AddMemoryForm"
			},
			"AddPipelineForm": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"urlIdx": {
						"type": "integer",
						"title": "Urlidx"
					}
				},
				"type": "object",
				"required": [
					"url",
					"urlIdx"
				],
				"title": "AddPipelineForm"
			},
			"AddUserForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"password": {
						"type": "string",
						"title": "Password"
					},
					"profile_image_url": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Profile Image Url",
						"default": "/user.png"
					},
					"role": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Role",
						"default": "pending"
					}
				},
				"type": "object",
				"required": [
					"name",
					"email",
					"password"
				],
				"title": "AddUserForm"
			},
			"AdminConfig": {
				"properties": {
					"SHOW_ADMIN_DETAILS": {
						"type": "boolean",
						"title": "Show Admin Details"
					},
					"WEBUI_URL": {
						"type": "string",
						"title": "Webui Url"
					},
					"ENABLE_SIGNUP": {
						"type": "boolean",
						"title": "Enable Signup"
					},
					"ENABLE_API_KEY": {
						"type": "boolean",
						"title": "Enable Api Key"
					},
					"ENABLE_API_KEY_ENDPOINT_RESTRICTIONS": {
						"type": "boolean",
						"title": "Enable Api Key Endpoint Restrictions"
					},
					"API_KEY_ALLOWED_ENDPOINTS": {
						"type": "string",
						"title": "Api Key Allowed Endpoints"
					},
					"ENABLE_CHANNELS": {
						"type": "boolean",
						"title": "Enable Channels"
					},
					"DEFAULT_USER_ROLE": {
						"type": "string",
						"title": "Default User Role"
					},
					"JWT_EXPIRES_IN": {
						"type": "string",
						"title": "Jwt Expires In"
					},
					"ENABLE_COMMUNITY_SHARING": {
						"type": "boolean",
						"title": "Enable Community Sharing"
					},
					"ENABLE_MESSAGE_RATING": {
						"type": "boolean",
						"title": "Enable Message Rating"
					}
				},
				"type": "object",
				"required": [
					"SHOW_ADMIN_DETAILS",
					"WEBUI_URL",
					"ENABLE_SIGNUP",
					"ENABLE_API_KEY",
					"ENABLE_API_KEY_ENDPOINT_RESTRICTIONS",
					"API_KEY_ALLOWED_ENDPOINTS",
					"ENABLE_CHANNELS",
					"DEFAULT_USER_ROLE",
					"JWT_EXPIRES_IN",
					"ENABLE_COMMUNITY_SHARING",
					"ENABLE_MESSAGE_RATING"
				],
				"title": "AdminConfig"
			},
			"ApiKey": {
				"properties": {
					"api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Api Key"
					}
				},
				"type": "object",
				"title": "ApiKey"
			},
			"AudioConfigUpdateForm": {
				"properties": {
					"tts": {
						"$ref": "#/components/schemas/TTSConfigForm"
					},
					"stt": {
						"$ref": "#/components/schemas/STTConfigForm"
					}
				},
				"type": "object",
				"required": [
					"tts",
					"stt"
				],
				"title": "AudioConfigUpdateForm"
			},
			"Automatic1111ConfigForm": {
				"properties": {
					"AUTOMATIC1111_BASE_URL": {
						"type": "string",
						"title": "Automatic1111 Base Url"
					},
					"AUTOMATIC1111_API_AUTH": {
						"type": "string",
						"title": "Automatic1111 Api Auth"
					},
					"AUTOMATIC1111_CFG_SCALE": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number"
							},
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Automatic1111 Cfg Scale"
					},
					"AUTOMATIC1111_SAMPLER": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Automatic1111 Sampler"
					},
					"AUTOMATIC1111_SCHEDULER": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Automatic1111 Scheduler"
					}
				},
				"type": "object",
				"required": [
					"AUTOMATIC1111_BASE_URL",
					"AUTOMATIC1111_API_AUTH",
					"AUTOMATIC1111_CFG_SCALE",
					"AUTOMATIC1111_SAMPLER",
					"AUTOMATIC1111_SCHEDULER"
				],
				"title": "Automatic1111ConfigForm"
			},
			"BannerModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"type": {
						"type": "string",
						"title": "Type"
					},
					"title": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Title"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"dismissible": {
						"type": "boolean",
						"title": "Dismissible"
					},
					"timestamp": {
						"type": "integer",
						"title": "Timestamp"
					}
				},
				"type": "object",
				"required": [
					"id",
					"type",
					"content",
					"dismissible",
					"timestamp"
				],
				"title": "BannerModel"
			},
			"BatchProcessFilesForm": {
				"properties": {
					"files": {
						"items": {
							"$ref": "#/components/schemas/FileModel"
						},
						"type": "array",
						"title": "Files"
					},
					"collection_name": {
						"type": "string",
						"title": "Collection Name"
					}
				},
				"type": "object",
				"required": [
					"files",
					"collection_name"
				],
				"title": "BatchProcessFilesForm"
			},
			"BatchProcessFilesResponse": {
				"properties": {
					"results": {
						"items": {
							"$ref": "#/components/schemas/BatchProcessFilesResult"
						},
						"type": "array",
						"title": "Results"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/BatchProcessFilesResult"
						},
						"type": "array",
						"title": "Errors"
					}
				},
				"type": "object",
				"required": [
					"results",
					"errors"
				],
				"title": "BatchProcessFilesResponse"
			},
			"BatchProcessFilesResult": {
				"properties": {
					"file_id": {
						"type": "string",
						"title": "File Id"
					},
					"status": {
						"type": "string",
						"title": "Status"
					},
					"error": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Error"
					}
				},
				"type": "object",
				"required": [
					"file_id",
					"status"
				],
				"title": "BatchProcessFilesResult"
			},
			"Body_transcription_api_v1_audio_transcriptions_post": {
				"properties": {
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File"
					}
				},
				"type": "object",
				"required": [
					"file"
				],
				"title": "Body_transcription_api_v1_audio_transcriptions_post"
			},
			"Body_upload_file_api_v1_files__post": {
				"properties": {
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File"
					},
					"file_metadata": {
						"type": "object",
						"title": "File Metadata",
						"default": {}
					}
				},
				"type": "object",
				"required": [
					"file"
				],
				"title": "Body_upload_file_api_v1_files__post"
			},
			"Body_upload_model_ollama_models_upload__url_idx__post": {
				"properties": {
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File"
					}
				},
				"type": "object",
				"required": [
					"file"
				],
				"title": "Body_upload_model_ollama_models_upload__url_idx__post"
			},
			"Body_upload_model_ollama_models_upload_post": {
				"properties": {
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File"
					}
				},
				"type": "object",
				"required": [
					"file"
				],
				"title": "Body_upload_model_ollama_models_upload_post"
			},
			"Body_upload_pipeline_api_v1_pipelines_upload_post": {
				"properties": {
					"urlIdx": {
						"type": "integer",
						"title": "Urlidx"
					},
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File"
					}
				},
				"type": "object",
				"required": [
					"urlIdx",
					"file"
				],
				"title": "Body_upload_pipeline_api_v1_pipelines_upload_post"
			},
			"ChannelForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "ChannelForm"
			},
			"ChannelModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"type": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Type"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"created_at",
					"updated_at"
				],
				"title": "ChannelModel"
			},
			"ChatFolderIdForm": {
				"properties": {
					"folder_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Folder Id"
					}
				},
				"type": "object",
				"title": "ChatFolderIdForm"
			},
			"ChatForm": {
				"properties": {
					"chat": {
						"type": "object",
						"title": "Chat"
					}
				},
				"type": "object",
				"required": [
					"chat"
				],
				"title": "ChatForm"
			},
			"ChatImportForm": {
				"properties": {
					"chat": {
						"type": "object",
						"title": "Chat"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta",
						"default": {}
					},
					"pinned": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Pinned",
						"default": false
					},
					"folder_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Folder Id"
					}
				},
				"type": "object",
				"required": [
					"chat"
				],
				"title": "ChatImportForm"
			},
			"ChatPermissions": {
				"properties": {
					"controls": {
						"type": "boolean",
						"title": "Controls",
						"default": true
					},
					"file_upload": {
						"type": "boolean",
						"title": "File Upload",
						"default": true
					},
					"delete": {
						"type": "boolean",
						"title": "Delete",
						"default": true
					},
					"edit": {
						"type": "boolean",
						"title": "Edit",
						"default": true
					},
					"temporary": {
						"type": "boolean",
						"title": "Temporary",
						"default": true
					}
				},
				"type": "object",
				"title": "ChatPermissions"
			},
			"ChatResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"chat": {
						"type": "object",
						"title": "Chat"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"share_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Share Id"
					},
					"archived": {
						"type": "boolean",
						"title": "Archived"
					},
					"pinned": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Pinned",
						"default": false
					},
					"meta": {
						"type": "object",
						"title": "Meta",
						"default": {}
					},
					"folder_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Folder Id"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"title",
					"chat",
					"updated_at",
					"created_at",
					"archived"
				],
				"title": "ChatResponse"
			},
			"ChatTitleIdResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"title",
					"updated_at",
					"created_at"
				],
				"title": "ChatTitleIdResponse"
			},
			"ChatTitleMessagesForm": {
				"properties": {
					"title": {
						"type": "string",
						"title": "Title"
					},
					"messages": {
						"items": {
							"type": "object"
						},
						"type": "array",
						"title": "Messages"
					}
				},
				"type": "object",
				"required": [
					"title",
					"messages"
				],
				"title": "ChatTitleMessagesForm"
			},
			"ChunkParamUpdateForm": {
				"properties": {
					"text_splitter": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Text Splitter"
					},
					"chunk_size": {
						"type": "integer",
						"title": "Chunk Size"
					},
					"chunk_overlap": {
						"type": "integer",
						"title": "Chunk Overlap"
					}
				},
				"type": "object",
				"required": [
					"chunk_size",
					"chunk_overlap"
				],
				"title": "ChunkParamUpdateForm"
			},
			"CloneForm": {
				"properties": {
					"title": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Title"
					}
				},
				"type": "object",
				"title": "CloneForm"
			},
			"CodeFormatRequest": {
				"properties": {
					"code": {
						"type": "string",
						"title": "Code"
					}
				},
				"type": "object",
				"required": [
					"code"
				],
				"title": "CodeFormatRequest"
			},
			"CodeInterpreterConfigForm": {
				"properties": {
					"ENABLE_CODE_INTERPRETER": {
						"type": "boolean",
						"title": "Enable Code Interpreter"
					},
					"CODE_INTERPRETER_ENGINE": {
						"type": "string",
						"title": "Code Interpreter Engine"
					},
					"CODE_INTERPRETER_PROMPT_TEMPLATE": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Code Interpreter Prompt Template"
					},
					"CODE_INTERPRETER_JUPYTER_URL": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Code Interpreter Jupyter Url"
					},
					"CODE_INTERPRETER_JUPYTER_AUTH": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Code Interpreter Jupyter Auth"
					},
					"CODE_INTERPRETER_JUPYTER_AUTH_TOKEN": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Code Interpreter Jupyter Auth Token"
					},
					"CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Code Interpreter Jupyter Auth Password"
					}
				},
				"type": "object",
				"required": [
					"ENABLE_CODE_INTERPRETER",
					"CODE_INTERPRETER_ENGINE",
					"CODE_INTERPRETER_PROMPT_TEMPLATE",
					"CODE_INTERPRETER_JUPYTER_URL",
					"CODE_INTERPRETER_JUPYTER_AUTH",
					"CODE_INTERPRETER_JUPYTER_AUTH_TOKEN",
					"CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD"
				],
				"title": "CodeInterpreterConfigForm"
			},
			"ComfyUIConfigForm": {
				"properties": {
					"COMFYUI_BASE_URL": {
						"type": "string",
						"title": "Comfyui Base Url"
					},
					"COMFYUI_API_KEY": {
						"type": "string",
						"title": "Comfyui Api Key"
					},
					"COMFYUI_WORKFLOW": {
						"type": "string",
						"title": "Comfyui Workflow"
					},
					"COMFYUI_WORKFLOW_NODES": {
						"items": {
							"type": "object"
						},
						"type": "array",
						"title": "Comfyui Workflow Nodes"
					}
				},
				"type": "object",
				"required": [
					"COMFYUI_BASE_URL",
					"COMFYUI_API_KEY",
					"COMFYUI_WORKFLOW",
					"COMFYUI_WORKFLOW_NODES"
				],
				"title": "ComfyUIConfigForm"
			},
			"ConfigForm": {
				"properties": {
					"enabled": {
						"type": "boolean",
						"title": "Enabled"
					},
					"engine": {
						"type": "string",
						"title": "Engine"
					},
					"prompt_generation": {
						"type": "boolean",
						"title": "Prompt Generation"
					},
					"openai": {
						"$ref": "#/components/schemas/open_webui__routers__images__OpenAIConfigForm"
					},
					"automatic1111": {
						"$ref": "#/components/schemas/Automatic1111ConfigForm"
					},
					"comfyui": {
						"$ref": "#/components/schemas/ComfyUIConfigForm"
					}
				},
				"type": "object",
				"required": [
					"enabled",
					"engine",
					"prompt_generation",
					"openai",
					"automatic1111",
					"comfyui"
				],
				"title": "ConfigForm"
			},
			"ConfigUpdateForm": {
				"properties": {
					"pdf_extract_images": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Pdf Extract Images"
					},
					"enable_google_drive_integration": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enable Google Drive Integration"
					},
					"file": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/FileConfig"
							},
							{
								"type": "null"
							}
						]
					},
					"content_extraction": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ContentExtractionConfig"
							},
							{
								"type": "null"
							}
						]
					},
					"chunk": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ChunkParamUpdateForm"
							},
							{
								"type": "null"
							}
						]
					},
					"youtube": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/YoutubeLoaderConfig"
							},
							{
								"type": "null"
							}
						]
					},
					"web": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/WebConfig"
							},
							{
								"type": "null"
							}
						]
					}
				},
				"type": "object",
				"title": "ConfigUpdateForm"
			},
			"ContentExtractionConfig": {
				"properties": {
					"engine": {
						"type": "string",
						"title": "Engine",
						"default": ""
					},
					"tika_server_url": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Tika Server Url"
					}
				},
				"type": "object",
				"title": "ContentExtractionConfig"
			},
			"ContentForm": {
				"properties": {
					"content": {
						"type": "string",
						"title": "Content"
					}
				},
				"type": "object",
				"required": [
					"content"
				],
				"title": "ContentForm"
			},
			"CopyModelForm": {
				"properties": {
					"source": {
						"type": "string",
						"title": "Source"
					},
					"destination": {
						"type": "string",
						"title": "Destination"
					}
				},
				"type": "object",
				"required": [
					"source",
					"destination"
				],
				"title": "CopyModelForm"
			},
			"CreateModelForm": {
				"properties": {
					"model": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Model"
					},
					"stream": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Stream"
					},
					"path": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Path"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"title": "CreateModelForm"
			},
			"DeleteForm": {
				"properties": {
					"collection_name": {
						"type": "string",
						"title": "Collection Name"
					},
					"file_id": {
						"type": "string",
						"title": "File Id"
					}
				},
				"type": "object",
				"required": [
					"collection_name",
					"file_id"
				],
				"title": "DeleteForm"
			},
			"DeletePipelineForm": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"urlIdx": {
						"type": "integer",
						"title": "Urlidx"
					}
				},
				"type": "object",
				"required": [
					"id",
					"urlIdx"
				],
				"title": "DeletePipelineForm"
			},
			"DirectConnectionsConfigForm": {
				"properties": {
					"ENABLE_DIRECT_CONNECTIONS": {
						"type": "boolean",
						"title": "Enable Direct Connections"
					}
				},
				"type": "object",
				"required": [
					"ENABLE_DIRECT_CONNECTIONS"
				],
				"title": "DirectConnectionsConfigForm"
			},
			"EmbeddingModelUpdateForm": {
				"properties": {
					"openai_config": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/open_webui__routers__retrieval__OpenAIConfigForm"
							},
							{
								"type": "null"
							}
						]
					},
					"ollama_config": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/open_webui__routers__retrieval__OllamaConfigForm"
							},
							{
								"type": "null"
							}
						]
					},
					"embedding_engine": {
						"type": "string",
						"title": "Embedding Engine"
					},
					"embedding_model": {
						"type": "string",
						"title": "Embedding Model"
					},
					"embedding_batch_size": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Embedding Batch Size",
						"default": 1
					}
				},
				"type": "object",
				"required": [
					"embedding_engine",
					"embedding_model"
				],
				"title": "EmbeddingModelUpdateForm"
			},
			"FeaturesPermissions": {
				"properties": {
					"web_search": {
						"type": "boolean",
						"title": "Web Search",
						"default": true
					},
					"image_generation": {
						"type": "boolean",
						"title": "Image Generation",
						"default": true
					},
					"code_interpreter": {
						"type": "boolean",
						"title": "Code Interpreter",
						"default": true
					}
				},
				"type": "object",
				"title": "FeaturesPermissions"
			},
			"FeedbackForm": {
				"properties": {
					"type": {
						"type": "string",
						"title": "Type"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RatingData"
							},
							{
								"type": "null"
							}
						]
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"snapshot": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SnapshotData"
							},
							{
								"type": "null"
							}
						]
					}
				},
				"additionalProperties": true,
				"type": "object",
				"required": [
					"type"
				],
				"title": "FeedbackForm"
			},
			"FeedbackModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"version": {
						"type": "integer",
						"title": "Version"
					},
					"type": {
						"type": "string",
						"title": "Type"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"snapshot": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Snapshot"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"version",
					"type",
					"created_at",
					"updated_at"
				],
				"title": "FeedbackModel"
			},
			"FeedbackUserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"version": {
						"type": "integer",
						"title": "Version"
					},
					"type": {
						"type": "string",
						"title": "Type"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/UserModel"
							},
							{
								"type": "null"
							}
						]
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"version",
					"type",
					"created_at",
					"updated_at"
				],
				"title": "FeedbackUserResponse"
			},
			"FileConfig": {
				"properties": {
					"max_size": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Max Size"
					},
					"max_count": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Max Count"
					}
				},
				"type": "object",
				"title": "FileConfig"
			},
			"FileMeta": {
				"properties": {
					"name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Name"
					},
					"content_type": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Content Type"
					},
					"size": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Size"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"title": "FileMeta"
			},
			"FileMetadataResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"meta": {
						"type": "object",
						"title": "Meta"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"meta",
					"created_at",
					"updated_at"
				],
				"title": "FileMetadataResponse"
			},
			"FileModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"hash": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Hash"
					},
					"filename": {
						"type": "string",
						"title": "Filename"
					},
					"path": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Path"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"created_at": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Created At"
					},
					"updated_at": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"filename",
					"created_at",
					"updated_at"
				],
				"title": "FileModel"
			},
			"FileModelResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"hash": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Hash"
					},
					"filename": {
						"type": "string",
						"title": "Filename"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"$ref": "#/components/schemas/FileMeta"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"required": [
					"id",
					"user_id",
					"filename",
					"meta",
					"created_at",
					"updated_at"
				],
				"title": "FileModelResponse"
			},
			"FolderForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"required": [
					"name"
				],
				"title": "FolderForm"
			},
			"FolderIsExpandedForm": {
				"properties": {
					"is_expanded": {
						"type": "boolean",
						"title": "Is Expanded"
					}
				},
				"type": "object",
				"required": [
					"is_expanded"
				],
				"title": "FolderIsExpandedForm"
			},
			"FolderModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"parent_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Parent Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"items": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Items"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"is_expanded": {
						"type": "boolean",
						"title": "Is Expanded",
						"default": false
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"created_at",
					"updated_at"
				],
				"title": "FolderModel"
			},
			"FolderParentIdForm": {
				"properties": {
					"parent_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Parent Id"
					}
				},
				"type": "object",
				"title": "FolderParentIdForm"
			},
			"FunctionForm": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"meta": {
						"$ref": "#/components/schemas/FunctionMeta"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"content",
					"meta"
				],
				"title": "FunctionForm"
			},
			"FunctionMeta": {
				"properties": {
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"manifest": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Manifest",
						"default": {}
					}
				},
				"type": "object",
				"title": "FunctionMeta"
			},
			"FunctionModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"type": {
						"type": "string",
						"title": "Type"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"meta": {
						"$ref": "#/components/schemas/FunctionMeta"
					},
					"is_active": {
						"type": "boolean",
						"title": "Is Active",
						"default": false
					},
					"is_global": {
						"type": "boolean",
						"title": "Is Global",
						"default": false
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"type",
					"content",
					"meta",
					"updated_at",
					"created_at"
				],
				"title": "FunctionModel"
			},
			"FunctionResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"type": {
						"type": "string",
						"title": "Type"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"meta": {
						"$ref": "#/components/schemas/FunctionMeta"
					},
					"is_active": {
						"type": "boolean",
						"title": "Is Active"
					},
					"is_global": {
						"type": "boolean",
						"title": "Is Global"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"type",
					"name",
					"meta",
					"is_active",
					"is_global",
					"updated_at",
					"created_at"
				],
				"title": "FunctionResponse"
			},
			"GenerateCompletionForm": {
				"properties": {
					"model": {
						"type": "string",
						"title": "Model"
					},
					"prompt": {
						"type": "string",
						"title": "Prompt"
					},
					"suffix": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Suffix"
					},
					"images": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Images"
					},
					"format": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Format"
					},
					"options": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Options"
					},
					"system": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "System"
					},
					"template": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Template"
					},
					"context": {
						"anyOf": [
							{
								"items": {
									"type": "integer"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Context"
					},
					"stream": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Stream",
						"default": true
					},
					"raw": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Raw"
					},
					"keep_alive": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Keep Alive"
					}
				},
				"type": "object",
				"required": [
					"model",
					"prompt"
				],
				"title": "GenerateCompletionForm"
			},
			"GenerateEmbedForm": {
				"properties": {
					"model": {
						"type": "string",
						"title": "Model"
					},
					"input": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "string"
							}
						],
						"title": "Input"
					},
					"truncate": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Truncate"
					},
					"options": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Options"
					},
					"keep_alive": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Keep Alive"
					}
				},
				"type": "object",
				"required": [
					"model",
					"input"
				],
				"title": "GenerateEmbedForm"
			},
			"GenerateEmbeddingsForm": {
				"properties": {
					"model": {
						"type": "string",
						"title": "Model"
					},
					"prompt": {
						"type": "string",
						"title": "Prompt"
					},
					"options": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Options"
					},
					"keep_alive": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Keep Alive"
					}
				},
				"type": "object",
				"required": [
					"model",
					"prompt"
				],
				"title": "GenerateEmbeddingsForm"
			},
			"GenerateImageForm": {
				"properties": {
					"model": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Model"
					},
					"prompt": {
						"type": "string",
						"title": "Prompt"
					},
					"size": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Size"
					},
					"n": {
						"type": "integer",
						"title": "N",
						"default": 1
					},
					"negative_prompt": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Negative Prompt"
					}
				},
				"type": "object",
				"required": [
					"prompt"
				],
				"title": "GenerateImageForm"
			},
			"GroupForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"permissions": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions"
					}
				},
				"type": "object",
				"required": [
					"name",
					"description"
				],
				"title": "GroupForm"
			},
			"GroupResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"permissions": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"user_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "User Ids",
						"default": []
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"description",
					"created_at",
					"updated_at"
				],
				"title": "GroupResponse"
			},
			"GroupUpdateForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"permissions": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions"
					},
					"user_ids": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "User Ids"
					}
				},
				"type": "object",
				"required": [
					"name",
					"description"
				],
				"title": "GroupUpdateForm"
			},
			"HTTPValidationError": {
				"properties": {
					"detail": {
						"items": {
							"$ref": "#/components/schemas/ValidationError"
						},
						"type": "array",
						"title": "Detail"
					}
				},
				"type": "object",
				"title": "HTTPValidationError"
			},
			"ImageConfigForm": {
				"properties": {
					"MODEL": {
						"type": "string",
						"title": "Model"
					},
					"IMAGE_SIZE": {
						"type": "string",
						"title": "Image Size"
					},
					"IMAGE_STEPS": {
						"type": "integer",
						"title": "Image Steps"
					}
				},
				"type": "object",
				"required": [
					"MODEL",
					"IMAGE_SIZE",
					"IMAGE_STEPS"
				],
				"title": "ImageConfigForm"
			},
			"ImportConfigForm": {
				"properties": {
					"config": {
						"type": "object",
						"title": "Config"
					}
				},
				"type": "object",
				"required": [
					"config"
				],
				"title": "ImportConfigForm"
			},
			"KnowledgeFileIdForm": {
				"properties": {
					"file_id": {
						"type": "string",
						"title": "File Id"
					}
				},
				"type": "object",
				"required": [
					"file_id"
				],
				"title": "KnowledgeFileIdForm"
			},
			"KnowledgeFilesResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/FileModel"
						},
						"type": "array",
						"title": "Files"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"description",
					"created_at",
					"updated_at",
					"files"
				],
				"title": "KnowledgeFilesResponse"
			},
			"KnowledgeForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					}
				},
				"type": "object",
				"required": [
					"name",
					"description"
				],
				"title": "KnowledgeForm"
			},
			"KnowledgeResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"files": {
						"anyOf": [
							{
								"items": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FileMetadataResponse"
										},
										{
											"type": "object"
										}
									]
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Files"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"description",
					"created_at",
					"updated_at"
				],
				"title": "KnowledgeResponse"
			},
			"KnowledgeUserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/open_webui__models__users__UserResponse"
							},
							{
								"type": "null"
							}
						]
					},
					"files": {
						"anyOf": [
							{
								"items": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FileMetadataResponse"
										},
										{
											"type": "object"
										}
									]
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Files"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"description",
					"created_at",
					"updated_at"
				],
				"title": "KnowledgeUserResponse"
			},
			"LdapConfigForm": {
				"properties": {
					"enable_ldap": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enable Ldap"
					}
				},
				"type": "object",
				"title": "LdapConfigForm"
			},
			"LdapForm": {
				"properties": {
					"user": {
						"type": "string",
						"title": "User"
					},
					"password": {
						"type": "string",
						"title": "Password"
					}
				},
				"type": "object",
				"required": [
					"user",
					"password"
				],
				"title": "LdapForm"
			},
			"LdapServerConfig": {
				"properties": {
					"label": {
						"type": "string",
						"title": "Label"
					},
					"host": {
						"type": "string",
						"title": "Host"
					},
					"port": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Port"
					},
					"attribute_for_mail": {
						"type": "string",
						"title": "Attribute For Mail",
						"default": "mail"
					},
					"attribute_for_username": {
						"type": "string",
						"title": "Attribute For Username",
						"default": "uid"
					},
					"app_dn": {
						"type": "string",
						"title": "App Dn"
					},
					"app_dn_password": {
						"type": "string",
						"title": "App Dn Password"
					},
					"search_base": {
						"type": "string",
						"title": "Search Base"
					},
					"search_filters": {
						"type": "string",
						"title": "Search Filters",
						"default": ""
					},
					"use_tls": {
						"type": "boolean",
						"title": "Use Tls",
						"default": true
					},
					"certificate_path": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Certificate Path"
					},
					"ciphers": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Ciphers",
						"default": "ALL"
					}
				},
				"type": "object",
				"required": [
					"label",
					"host",
					"app_dn",
					"app_dn_password",
					"search_base"
				],
				"title": "LdapServerConfig"
			},
			"MarkdownForm": {
				"properties": {
					"md": {
						"type": "string",
						"title": "Md"
					}
				},
				"type": "object",
				"required": [
					"md"
				],
				"title": "MarkdownForm"
			},
			"MemoryModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"content",
					"updated_at",
					"created_at"
				],
				"title": "MemoryModel"
			},
			"MemoryUpdateModel": {
				"properties": {
					"content": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Content"
					}
				},
				"type": "object",
				"title": "MemoryUpdateModel"
			},
			"MessageForm": {
				"properties": {
					"content": {
						"type": "string",
						"title": "Content"
					},
					"parent_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Parent Id"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					}
				},
				"type": "object",
				"required": [
					"content"
				],
				"title": "MessageForm"
			},
			"MessageModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"channel_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Channel Id"
					},
					"parent_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Parent Id"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"content",
					"created_at",
					"updated_at"
				],
				"title": "MessageModel"
			},
			"MessageUserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"channel_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Channel Id"
					},
					"parent_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Parent Id"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"data": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"latest_reply_at": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Latest Reply At"
					},
					"reply_count": {
						"type": "integer",
						"title": "Reply Count"
					},
					"reactions": {
						"items": {
							"$ref": "#/components/schemas/Reactions"
						},
						"type": "array",
						"title": "Reactions"
					},
					"user": {
						"$ref": "#/components/schemas/UserNameResponse"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"content",
					"created_at",
					"updated_at",
					"latest_reply_at",
					"reply_count",
					"reactions",
					"user"
				],
				"title": "MessageUserResponse"
			},
			"ModelForm": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"base_model_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Base Model Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"meta": {
						"$ref": "#/components/schemas/ModelMeta"
					},
					"params": {
						"$ref": "#/components/schemas/ModelParams"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"is_active": {
						"type": "boolean",
						"title": "Is Active",
						"default": true
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"meta",
					"params"
				],
				"title": "ModelForm"
			},
			"ModelMeta": {
				"properties": {
					"profile_image_url": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Profile Image Url",
						"default": "/static/favicon.png"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"capabilities": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Capabilities"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"title": "ModelMeta"
			},
			"ModelModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"base_model_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Base Model Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"params": {
						"$ref": "#/components/schemas/ModelParams"
					},
					"meta": {
						"$ref": "#/components/schemas/ModelMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"is_active": {
						"type": "boolean",
						"title": "Is Active"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"params",
					"meta",
					"is_active",
					"updated_at",
					"created_at"
				],
				"title": "ModelModel"
			},
			"ModelNameForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "ModelNameForm"
			},
			"ModelParams": {
				"properties": {},
				"additionalProperties": true,
				"type": "object",
				"title": "ModelParams"
			},
			"ModelResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"base_model_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Base Model Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"params": {
						"$ref": "#/components/schemas/ModelParams"
					},
					"meta": {
						"$ref": "#/components/schemas/ModelMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"is_active": {
						"type": "boolean",
						"title": "Is Active"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"params",
					"meta",
					"is_active",
					"updated_at",
					"created_at"
				],
				"title": "ModelResponse"
			},
			"ModelUserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"base_model_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Base Model Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"params": {
						"$ref": "#/components/schemas/ModelParams"
					},
					"meta": {
						"$ref": "#/components/schemas/ModelMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"is_active": {
						"type": "boolean",
						"title": "Is Active"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/open_webui__models__users__UserResponse"
							},
							{
								"type": "null"
							}
						]
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"params",
					"meta",
					"is_active",
					"updated_at",
					"created_at"
				],
				"title": "ModelUserResponse"
			},
			"ModelsConfigForm": {
				"properties": {
					"DEFAULT_MODELS": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Default Models"
					},
					"MODEL_ORDER_LIST": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Model Order List"
					}
				},
				"type": "object",
				"required": [
					"DEFAULT_MODELS",
					"MODEL_ORDER_LIST"
				],
				"title": "ModelsConfigForm"
			},
			"ProcessFileForm": {
				"properties": {
					"file_id": {
						"type": "string",
						"title": "File Id"
					},
					"content": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Content"
					},
					"collection_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Collection Name"
					}
				},
				"type": "object",
				"required": [
					"file_id"
				],
				"title": "ProcessFileForm"
			},
			"ProcessTextForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"collection_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Collection Name"
					}
				},
				"type": "object",
				"required": [
					"name",
					"content"
				],
				"title": "ProcessTextForm"
			},
			"ProcessUrlForm": {
				"properties": {
					"collection_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Collection Name"
					},
					"url": {
						"type": "string",
						"title": "Url"
					}
				},
				"type": "object",
				"required": [
					"url"
				],
				"title": "ProcessUrlForm"
			},
			"PromptForm": {
				"properties": {
					"command": {
						"type": "string",
						"title": "Command"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					}
				},
				"type": "object",
				"required": [
					"command",
					"title",
					"content"
				],
				"title": "PromptForm"
			},
			"PromptModel": {
				"properties": {
					"command": {
						"type": "string",
						"title": "Command"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"timestamp": {
						"type": "integer",
						"title": "Timestamp"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					}
				},
				"type": "object",
				"required": [
					"command",
					"user_id",
					"title",
					"content",
					"timestamp"
				],
				"title": "PromptModel"
			},
			"PromptSuggestion": {
				"properties": {
					"title": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Title"
					},
					"content": {
						"type": "string",
						"title": "Content"
					}
				},
				"type": "object",
				"required": [
					"title",
					"content"
				],
				"title": "PromptSuggestion"
			},
			"PromptUserResponse": {
				"properties": {
					"command": {
						"type": "string",
						"title": "Command"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"timestamp": {
						"type": "integer",
						"title": "Timestamp"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/open_webui__models__users__UserResponse"
							},
							{
								"type": "null"
							}
						]
					}
				},
				"type": "object",
				"required": [
					"command",
					"user_id",
					"title",
					"content",
					"timestamp"
				],
				"title": "PromptUserResponse"
			},
			"PushModelForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"insecure": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Insecure"
					},
					"stream": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Stream"
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "PushModelForm"
			},
			"QueryCollectionsForm": {
				"properties": {
					"collection_names": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Collection Names"
					},
					"query": {
						"type": "string",
						"title": "Query"
					},
					"k": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "K"
					},
					"r": {
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "null"
							}
						],
						"title": "R"
					},
					"hybrid": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Hybrid"
					}
				},
				"type": "object",
				"required": [
					"collection_names",
					"query"
				],
				"title": "QueryCollectionsForm"
			},
			"QueryDocForm": {
				"properties": {
					"collection_name": {
						"type": "string",
						"title": "Collection Name"
					},
					"query": {
						"type": "string",
						"title": "Query"
					},
					"k": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "K"
					},
					"r": {
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "null"
							}
						],
						"title": "R"
					},
					"hybrid": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Hybrid"
					}
				},
				"type": "object",
				"required": [
					"collection_name",
					"query"
				],
				"title": "QueryDocForm"
			},
			"QueryMemoryForm": {
				"properties": {
					"content": {
						"type": "string",
						"title": "Content"
					},
					"k": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "K",
						"default": 1
					}
				},
				"type": "object",
				"required": [
					"content"
				],
				"title": "QueryMemoryForm"
			},
			"QuerySettingsForm": {
				"properties": {
					"k": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "K"
					},
					"r": {
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "null"
							}
						],
						"title": "R"
					},
					"template": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Template"
					},
					"hybrid": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Hybrid"
					}
				},
				"type": "object",
				"title": "QuerySettingsForm"
			},
			"RatingData": {
				"properties": {
					"rating": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Rating"
					},
					"model_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Model Id"
					},
					"sibling_model_ids": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Sibling Model Ids"
					},
					"reason": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Reason"
					},
					"comment": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Comment"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"title": "RatingData"
			},
			"ReactionForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "ReactionForm"
			},
			"Reactions": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"user_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "User Ids"
					},
					"count": {
						"type": "integer",
						"title": "Count"
					}
				},
				"type": "object",
				"required": [
					"name",
					"user_ids",
					"count"
				],
				"title": "Reactions"
			},
			"RerankingModelUpdateForm": {
				"properties": {
					"reranking_model": {
						"type": "string",
						"title": "Reranking Model"
					}
				},
				"type": "object",
				"required": [
					"reranking_model"
				],
				"title": "RerankingModelUpdateForm"
			},
			"STTConfigForm": {
				"properties": {
					"OPENAI_API_BASE_URL": {
						"type": "string",
						"title": "Openai Api Base Url"
					},
					"OPENAI_API_KEY": {
						"type": "string",
						"title": "Openai Api Key"
					},
					"ENGINE": {
						"type": "string",
						"title": "Engine"
					},
					"MODEL": {
						"type": "string",
						"title": "Model"
					},
					"WHISPER_MODEL": {
						"type": "string",
						"title": "Whisper Model"
					},
					"DEEPGRAM_API_KEY": {
						"type": "string",
						"title": "Deepgram Api Key"
					}
				},
				"type": "object",
				"required": [
					"OPENAI_API_BASE_URL",
					"OPENAI_API_KEY",
					"ENGINE",
					"MODEL",
					"WHISPER_MODEL",
					"DEEPGRAM_API_KEY"
				],
				"title": "STTConfigForm"
			},
			"SearchForm": {
				"properties": {
					"collection_name": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Collection Name"
					},
					"query": {
						"type": "string",
						"title": "Query"
					}
				},
				"type": "object",
				"required": [
					"query"
				],
				"title": "SearchForm"
			},
			"SessionUserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"role": {
						"type": "string",
						"title": "Role"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					},
					"token": {
						"type": "string",
						"title": "Token"
					},
					"token_type": {
						"type": "string",
						"title": "Token Type"
					},
					"expires_at": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Expires At"
					},
					"permissions": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Permissions"
					}
				},
				"type": "object",
				"required": [
					"id",
					"email",
					"name",
					"role",
					"profile_image_url",
					"token",
					"token_type"
				],
				"title": "SessionUserResponse"
			},
			"SetBannersForm": {
				"properties": {
					"banners": {
						"items": {
							"$ref": "#/components/schemas/BannerModel"
						},
						"type": "array",
						"title": "Banners"
					}
				},
				"type": "object",
				"required": [
					"banners"
				],
				"title": "SetBannersForm"
			},
			"SetDefaultBackgroundForm": {
				"properties": {
					"background": {
						"type": "string",
						"title": "Background"
					}
				},
				"type": "object",
				"required": [
					"background"
				],
				"title": "SetDefaultBackgroundForm"
			},
			"SetDefaultSuggestionsForm": {
				"properties": {
					"suggestions": {
						"items": {
							"$ref": "#/components/schemas/PromptSuggestion"
						},
						"type": "array",
						"title": "Suggestions"
					}
				},
				"type": "object",
				"required": [
					"suggestions"
				],
				"title": "SetDefaultSuggestionsForm"
			},
			"SigninForm": {
				"properties": {
					"email": {
						"type": "string",
						"title": "Email"
					},
					"password": {
						"type": "string",
						"title": "Password"
					}
				},
				"type": "object",
				"required": [
					"email",
					"password"
				],
				"title": "SigninForm"
			},
			"SigninResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"role": {
						"type": "string",
						"title": "Role"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					},
					"token": {
						"type": "string",
						"title": "Token"
					},
					"token_type": {
						"type": "string",
						"title": "Token Type"
					}
				},
				"type": "object",
				"required": [
					"id",
					"email",
					"name",
					"role",
					"profile_image_url",
					"token",
					"token_type"
				],
				"title": "SigninResponse"
			},
			"SignupForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"password": {
						"type": "string",
						"title": "Password"
					},
					"profile_image_url": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Profile Image Url",
						"default": "/user.png"
					}
				},
				"type": "object",
				"required": [
					"name",
					"email",
					"password"
				],
				"title": "SignupForm"
			},
			"SnapshotData": {
				"properties": {
					"chat": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Chat"
					}
				},
				"additionalProperties": true,
				"type": "object",
				"title": "SnapshotData"
			},
			"TTSConfigForm": {
				"properties": {
					"OPENAI_API_BASE_URL": {
						"type": "string",
						"title": "Openai Api Base Url"
					},
					"OPENAI_API_KEY": {
						"type": "string",
						"title": "Openai Api Key"
					},
					"API_KEY": {
						"type": "string",
						"title": "Api Key"
					},
					"ENGINE": {
						"type": "string",
						"title": "Engine"
					},
					"MODEL": {
						"type": "string",
						"title": "Model"
					},
					"VOICE": {
						"type": "string",
						"title": "Voice"
					},
					"SPLIT_ON": {
						"type": "string",
						"title": "Split On"
					},
					"AZURE_SPEECH_REGION": {
						"type": "string",
						"title": "Azure Speech Region"
					},
					"AZURE_SPEECH_OUTPUT_FORMAT": {
						"type": "string",
						"title": "Azure Speech Output Format"
					}
				},
				"type": "object",
				"required": [
					"OPENAI_API_BASE_URL",
					"OPENAI_API_KEY",
					"API_KEY",
					"ENGINE",
					"MODEL",
					"VOICE",
					"SPLIT_ON",
					"AZURE_SPEECH_REGION",
					"AZURE_SPEECH_OUTPUT_FORMAT"
				],
				"title": "TTSConfigForm"
			},
			"TagFilterForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"skip": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Skip",
						"default": 0
					},
					"limit": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Limit",
						"default": 50
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "TagFilterForm"
			},
			"TagForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "TagForm"
			},
			"TagModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"meta": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Meta"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"user_id"
				],
				"title": "TagModel"
			},
			"TaskConfigForm": {
				"properties": {
					"TASK_MODEL": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Task Model"
					},
					"TASK_MODEL_EXTERNAL": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Task Model External"
					},
					"ENABLE_TITLE_GENERATION": {
						"type": "boolean",
						"title": "Enable Title Generation"
					},
					"TITLE_GENERATION_PROMPT_TEMPLATE": {
						"type": "string",
						"title": "Title Generation Prompt Template"
					},
					"IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE": {
						"type": "string",
						"title": "Image Prompt Generation Prompt Template"
					},
					"ENABLE_AUTOCOMPLETE_GENERATION": {
						"type": "boolean",
						"title": "Enable Autocomplete Generation"
					},
					"AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH": {
						"type": "integer",
						"title": "Autocomplete Generation Input Max Length"
					},
					"TAGS_GENERATION_PROMPT_TEMPLATE": {
						"type": "string",
						"title": "Tags Generation Prompt Template"
					},
					"ENABLE_TAGS_GENERATION": {
						"type": "boolean",
						"title": "Enable Tags Generation"
					},
					"ENABLE_SEARCH_QUERY_GENERATION": {
						"type": "boolean",
						"title": "Enable Search Query Generation"
					},
					"ENABLE_RETRIEVAL_QUERY_GENERATION": {
						"type": "boolean",
						"title": "Enable Retrieval Query Generation"
					},
					"QUERY_GENERATION_PROMPT_TEMPLATE": {
						"type": "string",
						"title": "Query Generation Prompt Template"
					},
					"TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE": {
						"type": "string",
						"title": "Tools Function Calling Prompt Template"
					}
				},
				"type": "object",
				"required": [
					"TASK_MODEL",
					"TASK_MODEL_EXTERNAL",
					"ENABLE_TITLE_GENERATION",
					"TITLE_GENERATION_PROMPT_TEMPLATE",
					"IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE",
					"ENABLE_AUTOCOMPLETE_GENERATION",
					"AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH",
					"TAGS_GENERATION_PROMPT_TEMPLATE",
					"ENABLE_TAGS_GENERATION",
					"ENABLE_SEARCH_QUERY_GENERATION",
					"ENABLE_RETRIEVAL_QUERY_GENERATION",
					"QUERY_GENERATION_PROMPT_TEMPLATE",
					"TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE"
				],
				"title": "TaskConfigForm"
			},
			"ToolForm": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"meta": {
						"$ref": "#/components/schemas/ToolMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"content",
					"meta"
				],
				"title": "ToolForm"
			},
			"ToolMeta": {
				"properties": {
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"manifest": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Manifest",
						"default": {}
					}
				},
				"type": "object",
				"title": "ToolMeta"
			},
			"ToolModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"content": {
						"type": "string",
						"title": "Content"
					},
					"specs": {
						"items": {
							"type": "object"
						},
						"type": "array",
						"title": "Specs"
					},
					"meta": {
						"$ref": "#/components/schemas/ToolMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"content",
					"specs",
					"meta",
					"updated_at",
					"created_at"
				],
				"title": "ToolModel"
			},
			"ToolResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"meta": {
						"$ref": "#/components/schemas/ToolMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"meta",
					"updated_at",
					"created_at"
				],
				"title": "ToolResponse"
			},
			"ToolUserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"user_id": {
						"type": "string",
						"title": "User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"meta": {
						"$ref": "#/components/schemas/ToolMeta"
					},
					"access_control": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Access Control"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"user": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/open_webui__models__users__UserResponse"
							},
							{
								"type": "null"
							}
						]
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"name",
					"meta",
					"updated_at",
					"created_at"
				],
				"title": "ToolUserResponse"
			},
			"UpdateConfigForm": {
				"properties": {
					"ENABLE_EVALUATION_ARENA_MODELS": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enable Evaluation Arena Models"
					},
					"EVALUATION_ARENA_MODELS": {
						"anyOf": [
							{
								"items": {
									"type": "object"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Evaluation Arena Models"
					}
				},
				"type": "object",
				"title": "UpdateConfigForm"
			},
			"UpdatePasswordForm": {
				"properties": {
					"password": {
						"type": "string",
						"title": "Password"
					},
					"new_password": {
						"type": "string",
						"title": "New Password"
					}
				},
				"type": "object",
				"required": [
					"password",
					"new_password"
				],
				"title": "UpdatePasswordForm"
			},
			"UpdateProfileForm": {
				"properties": {
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					},
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"profile_image_url",
					"name"
				],
				"title": "UpdateProfileForm"
			},
			"UrlForm": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					}
				},
				"type": "object",
				"required": [
					"url"
				],
				"title": "UrlForm"
			},
			"UserModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"role": {
						"type": "string",
						"title": "Role",
						"default": "pending"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					},
					"last_active_at": {
						"type": "integer",
						"title": "Last Active At"
					},
					"updated_at": {
						"type": "integer",
						"title": "Updated At"
					},
					"created_at": {
						"type": "integer",
						"title": "Created At"
					},
					"api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Api Key"
					},
					"settings": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/UserSettings"
							},
							{
								"type": "null"
							}
						]
					},
					"info": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Info"
					},
					"oauth_sub": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Oauth Sub"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"email",
					"profile_image_url",
					"last_active_at",
					"updated_at",
					"created_at"
				],
				"title": "UserModel"
			},
			"UserNameResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"role": {
						"type": "string",
						"title": "Role"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"role",
					"profile_image_url"
				],
				"title": "UserNameResponse"
			},
			"UserPermissions": {
				"properties": {
					"workspace": {
						"$ref": "#/components/schemas/WorkspacePermissions"
					},
					"chat": {
						"$ref": "#/components/schemas/ChatPermissions"
					},
					"features": {
						"$ref": "#/components/schemas/FeaturesPermissions"
					}
				},
				"type": "object",
				"required": [
					"workspace",
					"chat",
					"features"
				],
				"title": "UserPermissions"
			},
			"UserRoleUpdateForm": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"role": {
						"type": "string",
						"title": "Role"
					}
				},
				"type": "object",
				"required": [
					"id",
					"role"
				],
				"title": "UserRoleUpdateForm"
			},
			"UserSettings": {
				"properties": {
					"ui": {
						"anyOf": [
							{
								"type": "object"
							},
							{
								"type": "null"
							}
						],
						"title": "Ui",
						"default": {}
					}
				},
				"additionalProperties": true,
				"type": "object",
				"title": "UserSettings"
			},
			"UserUpdateForm": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					},
					"password": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Password"
					}
				},
				"type": "object",
				"required": [
					"name",
					"email",
					"profile_image_url"
				],
				"title": "UserUpdateForm"
			},
			"ValidationError": {
				"properties": {
					"loc": {
						"items": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "integer"
								}
							]
						},
						"type": "array",
						"title": "Location"
					},
					"msg": {
						"type": "string",
						"title": "Message"
					},
					"type": {
						"type": "string",
						"title": "Error Type"
					}
				},
				"type": "object",
				"required": [
					"loc",
					"msg",
					"type"
				],
				"title": "ValidationError"
			},
			"WebConfig": {
				"properties": {
					"search": {
						"$ref": "#/components/schemas/WebSearchConfig"
					},
					"web_loader_ssl_verification": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Web Loader Ssl Verification"
					}
				},
				"type": "object",
				"required": [
					"search"
				],
				"title": "WebConfig"
			},
			"WebSearchConfig": {
				"properties": {
					"enabled": {
						"type": "boolean",
						"title": "Enabled"
					},
					"engine": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Engine"
					},
					"searxng_query_url": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Searxng Query Url"
					},
					"google_pse_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Google Pse Api Key"
					},
					"google_pse_engine_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Google Pse Engine Id"
					},
					"brave_search_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Brave Search Api Key"
					},
					"kagi_search_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Kagi Search Api Key"
					},
					"mojeek_search_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Mojeek Search Api Key"
					},
					"bocha_search_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Bocha Search Api Key"
					},
					"serpstack_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Serpstack Api Key"
					},
					"serpstack_https": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Serpstack Https"
					},
					"serper_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Serper Api Key"
					},
					"serply_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Serply Api Key"
					},
					"tavily_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Tavily Api Key"
					},
					"searchapi_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Searchapi Api Key"
					},
					"searchapi_engine": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Searchapi Engine"
					},
					"serpapi_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Serpapi Api Key"
					},
					"serpapi_engine": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Serpapi Engine"
					},
					"jina_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Jina Api Key"
					},
					"bing_search_v7_endpoint": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Bing Search V7 Endpoint"
					},
					"bing_search_v7_subscription_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Bing Search V7 Subscription Key"
					},
					"exa_api_key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Exa Api Key"
					},
					"result_count": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Result Count"
					},
					"concurrent_requests": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Concurrent Requests"
					},
					"domain_filter_list": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Domain Filter List",
						"default": []
					}
				},
				"type": "object",
				"required": [
					"enabled"
				],
				"title": "WebSearchConfig"
			},
			"WorkspacePermissions": {
				"properties": {
					"models": {
						"type": "boolean",
						"title": "Models",
						"default": false
					},
					"knowledge": {
						"type": "boolean",
						"title": "Knowledge",
						"default": false
					},
					"prompts": {
						"type": "boolean",
						"title": "Prompts",
						"default": false
					},
					"tools": {
						"type": "boolean",
						"title": "Tools",
						"default": false
					}
				},
				"type": "object",
				"title": "WorkspacePermissions"
			},
			"YoutubeLoaderConfig": {
				"properties": {
					"language": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Language"
					},
					"translation": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Translation"
					},
					"proxy_url": {
						"type": "string",
						"title": "Proxy Url",
						"default": ""
					}
				},
				"type": "object",
				"required": [
					"language"
				],
				"title": "YoutubeLoaderConfig"
			},
			"open_webui__models__auths__UserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"role": {
						"type": "string",
						"title": "Role"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					}
				},
				"type": "object",
				"required": [
					"id",
					"email",
					"name",
					"role",
					"profile_image_url"
				],
				"title": "UserResponse"
			},
			"open_webui__models__users__UserResponse": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"email": {
						"type": "string",
						"title": "Email"
					},
					"role": {
						"type": "string",
						"title": "Role"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"email",
					"role",
					"profile_image_url"
				],
				"title": "UserResponse"
			},
			"open_webui__routers__images__OpenAIConfigForm": {
				"properties": {
					"OPENAI_API_BASE_URL": {
						"type": "string",
						"title": "Openai Api Base Url"
					},
					"OPENAI_API_KEY": {
						"type": "string",
						"title": "Openai Api Key"
					}
				},
				"type": "object",
				"required": [
					"OPENAI_API_BASE_URL",
					"OPENAI_API_KEY"
				],
				"title": "OpenAIConfigForm"
			},
			"open_webui__routers__ollama__ConnectionVerificationForm": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"key": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Key"
					}
				},
				"type": "object",
				"required": [
					"url"
				],
				"title": "ConnectionVerificationForm"
			},
			"open_webui__routers__ollama__OllamaConfigForm": {
				"properties": {
					"ENABLE_OLLAMA_API": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enable Ollama Api"
					},
					"OLLAMA_BASE_URLS": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Ollama Base Urls"
					},
					"OLLAMA_API_CONFIGS": {
						"type": "object",
						"title": "Ollama Api Configs"
					}
				},
				"type": "object",
				"required": [
					"OLLAMA_BASE_URLS",
					"OLLAMA_API_CONFIGS"
				],
				"title": "OllamaConfigForm"
			},
			"open_webui__routers__openai__ConnectionVerificationForm": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"key": {
						"type": "string",
						"title": "Key"
					}
				},
				"type": "object",
				"required": [
					"url",
					"key"
				],
				"title": "ConnectionVerificationForm"
			},
			"open_webui__routers__openai__OpenAIConfigForm": {
				"properties": {
					"ENABLE_OPENAI_API": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Enable Openai Api"
					},
					"OPENAI_API_BASE_URLS": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Openai Api Base Urls"
					},
					"OPENAI_API_KEYS": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Openai Api Keys"
					},
					"OPENAI_API_CONFIGS": {
						"type": "object",
						"title": "Openai Api Configs"
					}
				},
				"type": "object",
				"required": [
					"OPENAI_API_BASE_URLS",
					"OPENAI_API_KEYS",
					"OPENAI_API_CONFIGS"
				],
				"title": "OpenAIConfigForm"
			},
			"open_webui__routers__retrieval__OllamaConfigForm": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"key": {
						"type": "string",
						"title": "Key"
					}
				},
				"type": "object",
				"required": [
					"url",
					"key"
				],
				"title": "OllamaConfigForm"
			},
			"open_webui__routers__retrieval__OpenAIConfigForm": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"key": {
						"type": "string",
						"title": "Key"
					}
				},
				"type": "object",
				"required": [
					"url",
					"key"
				],
				"title": "OpenAIConfigForm"
			},
			"open_webui__routers__users__UserResponse": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"profile_image_url": {
						"type": "string",
						"title": "Profile Image Url"
					},
					"active": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "null"
							}
						],
						"title": "Active"
					}
				},
				"type": "object",
				"required": [
					"name",
					"profile_image_url"
				],
				"title": "UserResponse"
			}
		},
		"securitySchemes": {
			"HTTPBearer": {
				"type": "http",
				"scheme": "bearer"
			}
		}
	}
}